# This is the MiR Fleet openapi schema with fixes to make it compatible with code generators.
# The changes includes:
#
# * Remove fields that point to a server url.
# * Remove `authorization` headers from endpoints.
# * Add security definitions.
# * Add `RobotStatus` definition.
# * Fix definitions of various endpoints

consumes:
- application/json
definitions:
  Error:
    properties:
      error_code:
        description: The error in machine format
        type: string
      error_human:
        description: The error in human friendly format
        type: string
    type: object
  GetAction_definition:
    properties:
      action_type:
        description: ''
        type: string
      description:
        description: ''
        type: string
      descriptions:
        description: ''
        type: array
      help:
        description: ''
        type: string
      mission_group_id:
        description: ''
        type: string
      name:
        description: ''
        type: string
      parameters:
        description: ''
        type: array
    type: object
  GetAction_definitions:
    properties:
      action_type:
        description: ''
        type: string
      description:
        description: ''
        type: string
      descriptions:
        description: ''
        type: array
      help:
        description: ''
        type: string
      mission_group_id:
        description: ''
        type: string
      name:
        description: ''
        type: string
      parameters:
        description: ''
        type: array
    type: object
  GetArea_action_definition:
    properties:
      action_type:
        description: A name associated with this area action
        type: string
      action_type_id:
        description: The type of area action
        type: integer
      help:
        description: A description of this action
        type: string
      limit:
        description: The amount of actions of this type we can add.
        type: integer
      name:
        description: A nice name associated with this area action
        type: string
      parameters:
        type: string
    type: object
  GetArea_action_definitions:
    properties:
      action_type:
        description: A name associated with this area action
        type: string
      action_type_id:
        description: The type of area action
        type: integer
      help:
        description: A description of this action
        type: string
      limit:
        description: The amount of actions of this type we can add.
        type: integer
      name:
        description: A nice name associated with this area action
        type: string
      parameters:
        type: string
    type: object
  GetArea_event:
    properties:
      actions:
        description: ''
        type: object
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global id unique across robots that identifies this area
        type: string
      map:
        description: The url to the map this area belongs to
        type: string
      map_id:
        description: The id of the map this area belongs to
        type: string
      name:
        description: A name associated with this area
        type: string
      polygon:
        description: The list of coordinates in the area polygon
        type: array
      type_id:
        description: The type of area
        type: integer
    type: object
  GetArea_events:
    properties:
      guid:
        description: The global id unique across robots that identifies this area
        type: string
      map:
        description: The url to the map this area belongs to
        type: string
      name:
        description: A name associated with this area
        type: string
      type_id:
        description: The type of area
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetArea_events_definitions:
    properties:
      actions:
        type: string
      color:
        description: The color associated with this area
        type: string
      id:
        description: The type of area
        type: integer
      image:
        description: ''
        type: string
      legacyName:
        description: ''
        type: string
      name:
        description: A nice name associated with this area action
        type: string
    type: object
  GetBlock_area:
    properties:
      guid:
        type: string
    type: object
  GetCart:
    properties:
      cart_calibration:
        description: The url to the calibration of this cart
        type: string
      cart_calibration_id:
        description: The id of the calibration for this cart has
        type: string
      cart_type:
        description: The url to the type of this cart
        type: string
      cart_type_id:
        description: The id of the type of this cart
        type: string
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global id unique across robots that identifies this cart
        type: string
      name:
        description: The name of the cart
        type: string
    type: object
  GetCart_calibration:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      drive_height:
        description: The height of the hook when driving with carts of this cart calibration
        type: integer
      entry_height:
        description: The entry height of the hook for the cart calibration
        type: integer
      guid:
        description: The global id unique across robots that identifies this cart
          calibration
        type: string
      lock_height:
        description: The lock height of the hook for the cart calibration
        type: integer
      name:
        description: The name of the cart calibration
        type: string
      qw:
        description: The qw quaternion of the cart calibration
        format: float
        type: number
      qx:
        description: The qx quaternion of the cart calibration
        format: float
        type: number
      qy:
        description: The qy quaternion of the cart calibration
        format: float
        type: number
      qz:
        description: The qz quaternion of the cart calibration
        format: float
        type: number
      standard:
        description: If the cart calibration is standard or not
        type: boolean
      x:
        description: The offset in the x-coordinate of the cart calibration
        format: float
        type: number
      y:
        description: The offset in the y-coordinate of the cart calibration
        format: float
        type: number
      z:
        description: The offset in the z-coordinate of the cart calibration
        format: float
        type: number
    type: object
  GetCart_calibrations:
    properties:
      guid:
        description: The global id unique across robots that identifies this cart
          calibration
        type: string
      name:
        description: The name of the cart calibration
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetCart_type:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global id unique across robots that identifies this cart
          type
        type: string
      height:
        description: The height of carts of this type
        format: float
        type: number
      length:
        description: The length of carts of this type
        format: float
        type: number
      name:
        description: The name of the cart type
        type: string
      offset_locked_wheels:
        description: The offset from the center of the robot to the locked wheels
          of carts of this type
        format: float
        type: number
      width:
        description: The width of carts of this type
        format: float
        type: number
    type: object
  GetCart_types:
    properties:
      guid:
        description: The global id unique across robots that identifies this cart
          type
        type: string
      name:
        description: The name of the cart type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetCarts:
    properties:
      cart_calibration:
        description: The url to the calibration of this cart
        type: string
      cart_type:
        description: The url to the type of this cart
        type: string
      guid:
        description: The global id unique across robots that identifies this cart
        type: string
      name:
        description: The name of the cart
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetCert:
    properties: {}
    type: object
  GetCharger:
    properties:
      charger_id:
        description: The guid identifying the charger associated with this entry
        type: string
      group_id:
        description: The id identifying the charging group associated with this entry
        type: integer
    type: object
  GetCharger_charging_groups:
    properties:
      group_id:
        description: The id identifying the charging group
        type: integer
    type: object
  GetChargers:
    properties:
      charger_id:
        description: The guid identifying the charger associated with this entry
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetCharging_group:
    properties:
      id:
        description: The id that identifies this charging group
        type: integer
      name:
        description: The name associated with this charging group
        type: string
    type: object
  GetCharging_groups:
    properties:
      id:
        description: The id that identifies this charging group
        type: integer
      name:
        description: The name associated with this charging group
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetDashboard:
    properties:
      created_by:
        description: The url to the user that created the dashboard
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      fleet_dashboard:
        description: ''
        type: boolean
      guid:
        description: The global id unique across robots that identifies this dashboard
        type: string
      name:
        description: The name of this dashboard
        type: string
      widgets:
        description: The url to the possible widgets. if the dashboard does not have
          any widgets then this field is empty
        type: string
    type: object
  GetDashboard_widget:
    properties:
      created_by_id:
        description: User guid of the user of the dashboard which the widget belongs
          to
        type: string
      dashboard:
        description: 'The url to the dashboard where this widget belongs. '
        type: string
      dashboard_id:
        description: The guid of the dashboard this widget belongs to
        type: string
      guid:
        description: The global id unique across robots that identifies this widget
        type: string
      settings:
        description: Widgets configuration encoded base 64 in json
        type: string
    type: object
  GetDashboard_widgets:
    properties:
      dashboard_id:
        description: The guid of the dashboard this widget belongs to
        type: string
      guid:
        description: The global id unique across robots that identifies this widget
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetDashboards:
    properties:
      guid:
        description: The global id unique across robots that identifies this dashboard
        type: string
      name:
        description: The name of this dashboard
        type: string
      url:
        description: The URL of the resource
        type: string
      widgets:
        description: The url to the possible widgets. if the dashboard does not have
          any widgets then this field is empty
        type: string
    type: object
  GetDocking_offset:
    properties:
      bar_distance:
        description: The width of the bars for bar_markers
        format: float
        type: number
      bar_length:
        description: The length of the bars for bar_markers
        format: float
        type: number
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      docking_type:
        description: The docking type of the marker.
        type: integer
      guid:
        description: The global id unique across robots that identifies this docking
          offset
        type: string
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
      orientation_offset:
        description: The orientation offset with respect to the docking marker
        format: float
        type: number
      pos_id:
        description: The global id refering to the position that this offset belongs
          to
        type: string
      position:
        description: The url to the position
        type: string
      shelf_leg_asymmetry_x:
        description: The asymmetry of the shelf legs in the x direction with respect
          to the shelf legs marker
        format: float
        type: number
      x_offset:
        description: The x-offset with respect to the docking marker
        format: float
        type: number
      y_offset:
        description: The y-offset with respect to the docking marker
        format: float
        type: number
    type: object
  GetDocking_offset_type:
    properties:
      id:
        description: The global id unique across robots that identifies this docking
          offset
        type: integer
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
    type: object
  GetDocking_offset_types:
    properties:
      id:
        description: The global id unique across robots that identifies this docking
          offset
        type: integer
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetDocking_offsets:
    properties:
      guid:
        description: The global id unique across robots that identifies this docking
          offset
        type: string
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
      position:
        description: The url to the position
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetDocking_offsets_no_pos:
    properties:
      guid:
        description: The global id unique across robots that identifies this docking
          offset
        type: string
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
      position:
        description: The url to the position
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevator:
    properties:
      active:
        description: Boolean indicating the state of the elevator
        type: boolean
      authentication:
        description: Authentication type for the opcua server
        type: string
      created_by:
        description: The url to the description of this elevator
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      driver:
        description: Driver used to connect to the elevator server
        type: string
      guid:
        description: The global id unique across robots that identifies this elevator
        type: string
      ip:
        description: The ip of the elevator
        type: string
      name:
        description: The name of the elevator
        type: string
      namespace:
        description: Namespace under which the elevator is available on the opcua
          server
        type: string
      one_way:
        description: Integer indicating, if the elevator is one_way only, and in which
          direction
        type: integer
      password:
        description: Password for the opcua server
        type: string
      port:
        description: Port on which the serer ir running
        type: integer
      security_policy:
        description: Security policy type for the opcua server
        type: string
      session_guid:
        description: The global id unique across robots containing this elevator
        type: string
      turn_in_place:
        description: Boolean indicating if the robot can turn in the elevator
        type: boolean
      username:
        description: Username for the opcua server
        type: string
    type: object
  GetElevator_cmd_check_server:
    properties: {}
    type: object
  GetElevator_cmd_control:
    properties: {}
    type: object
  GetElevator_cmd_door:
    properties: {}
    type: object
  GetElevator_cmd_floor:
    properties: {}
    type: object
  GetElevator_floor:
    properties:
      created_by:
        description: The url to the description this elevator floor
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      door:
        description: The integer identifying the door used by the elevator on this
          floor
        type: integer
      elevator_entry_pos:
        description: ''
        type: string
      elevator_entry_pos_guid:
        description: The id of the position located in front of the elevator
        type: string
      elevator_guid:
        description: The global unique id of the elevator associated with this floor
        type: string
      elevator_pos:
        description: ''
        type: string
      elevator_pos_guid:
        description: The id of the position located in the elevator
        type: string
      entry_mission:
        description: ''
        type: string
      entry_mission_guid:
        description: The id of the entry mission
        type: string
      exit_mission:
        description: ''
        type: string
      exit_mission_guid:
        description: The id of the exit mission
        type: string
      floor:
        description: The integer identifying the floor
        type: integer
      guid:
        description: The global id unique across robots that identifies this elevator
          floor
        type: string
      map:
        description: ''
        type: string
      map_guid:
        description: The map id associated with the floor
        type: string
      session_guid:
        description: The global id unique across robots containing this elevator
        type: string
    type: object
  GetElevator_floors:
    properties:
      guid:
        description: The global id unique across robots that identifies this elevator
          floor
        type: string
      map:
        description: ''
        type: string
      map_guid:
        description: The map id associated with the floor
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevator_group:
    properties:
      id:
        description: The id that identifies this elevator group
        type: integer
      name:
        description: The name associated with this elevator group
        type: string
    type: object
  GetElevator_group_rel_elevator:
    properties:
      elevator_guid:
        description: Guid of the elevator associated with this relation
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevator_group_rel_robot:
    properties:
      robot_id:
        description: Id of the robot associated with this relation
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevator_groups:
    properties:
      id:
        description: The id that identifies this elevator group
        type: integer
      name:
        description: The name associated with this elevator group
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevator_opcua_scanner:
    properties: {}
    type: object
  GetElevator_status:
    properties:
      active:
        description: Boolean indicating if the elevator is active in the fleet
        type: boolean
      connected:
        description: Boolean indicating if the elevator is connected
        type: boolean
      control_requested:
        description: Boolean indicating if the fleet has requested control of the
          elevator
        type: boolean
      current_floor:
        description: The floor at which the elevator is currently
        type: integer
      door_1_open:
        description: Boolean indicating if door 1 of the elevator is open
        type: boolean
      door_1_open_requested:
        description: Boolean indicating if door 1 is requested to be opened
        type: boolean
      door_2_open:
        description: Boolean indicating if door 2 of the elevator is open
        type: boolean
      door_2_open_requested:
        description: Boolean indicating if door 2 is requested to be opened
        type: boolean
      floors:
        description: ''
        items:
          description: ''
          properties:
            door:
              description: Door to use at this floor
              type: integer
            floor_number:
              description: Floor number
              type: integer
          type: object
        type: array
      guid:
        description: The guid of the elevator
        type: string
      has_control:
        description: Boolean indicating, if the fleet has control of the elevator
        type: boolean
      in_use:
        description: Boolean indicating, if the elevator is in use by a robot
        type: boolean
      in_use_by_robot_ip:
        description: The ip identifying the robot currently using the elevator
        type: string
      ip:
        description: The ip of the elevator
        type: string
      name:
        description: The name of the elevator
        type: string
      queue:
        description: List of all robot ids in queue for the elevator
        items:
          description: ''
          type: integer
        type: array
      requested_floor:
        description: The floor to which the fleet has requested the elevator to go
        type: integer
    type: object
  GetElevator_statuses:
    properties:
      name:
        description: The name of the elevator
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetElevators:
    properties:
      guid:
        description: The global id unique across robots that identifies this elevator
        type: string
      name:
        description: The name of the elevator
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetError_report:
    properties:
      description:
        description: ''
        type: string
      download_url:
        description: The url to where the bag can be downloaded
        type: string
      id:
        description: Id of the autobag
        type: integer
      module:
        description: The module that created the autolog
        type: string
      ready:
        description: Status of the rosbag
        type: boolean
      time:
        description: The time where the autolog was created
        format: date-time
        type: string
    type: object
  GetError_report_download:
    properties: {}
    type: object
  GetError_reports:
    properties:
      description:
        description: ''
        type: string
      download_url:
        description: The url to where the bag can be downloaded
        type: string
      id:
        description: Id of the autobag
        type: integer
      module:
        description: The module that created the autolog
        type: string
      ready:
        description: Status of the rosbag
        type: boolean
      time:
        description: The time where the autolog was created
        format: date-time
        type: string
    type: object
  GetEvacuation:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      evacuation_activated:
        description: Boolean indicating the state of evacuation (enabled/disabled)
        type: boolean
      id:
        description: Id of the evacuation request
        type: integer
      note:
        description: Optional note associated with this fire alarm
        type: string
      trigger_time:
        description: The time at which an evacuation was last triggered
        format: date-time
        type: string
    type: object
  GetEvacuations:
    properties:
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      evacuation_activated:
        description: Boolean indicating the state of evacuation (enabled/disabled)
        type: boolean
      id:
        description: Id of the evacuation request
        type: integer
      note:
        description: Optional note associated with this fire alarm
        type: string
      trigger_time:
        description: The time at which an evacuation was last triggered
        format: date-time
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetFactory_reset_from_fleet:
    properties: {}
    type: object
  GetFire_alarm:
    properties:
      alarm_on:
        description: The boolean associated with this fire alarm indicating its state
          (enabled/disabled)
        type: boolean
      id:
        description: The id that identifies this fire alarm
        type: integer
      note:
        description: The possible note associated with this fire alarm
        type: string
      trigger_time:
        description: The time at which the fire alarm was last triggered
        format: date-time
        type: string
    type: object
  GetFire_alarms:
    properties:
      alarm_on:
        description: The boolean associated with this fire alarm indicating its state
          (enabled/disabled)
        type: boolean
      id:
        description: The id that identifies this fire alarm
        type: integer
      note:
        description: The possible note associated with this fire alarm
        type: string
      trigger_time:
        description: The time at which the fire alarm was last triggered
        format: date-time
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetFleet_reset:
    properties: {}
    type: object
  GetFleet_restart:
    properties: {}
    type: object
  GetFootprint:
    properties:
      config_id:
        description: The model name of the product for which the footprint is created
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      custom:
        description: Custom or rectangular footprint
        type: boolean
      footprint_points:
        description: The string defining the points in xy of the footprint
        type: string
      guid:
        description: The global id unique across robots that identifies this cart
          type
        type: string
      height:
        description: The height of this footprint
        format: float
        type: number
      hook:
        description: If the footprint is for a hook or not
        type: boolean
      name:
        description: The name of the footprint type
        type: string
    type: object
  GetFootprints:
    properties:
      config_id:
        description: The model name of the product for which the footprint is created
        type: string
      guid:
        description: The global id unique across robots that identifies this cart
          type
        type: string
      name:
        description: The name of the footprint type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetGroup_action_definition:
    properties:
      action_type:
        description: ''
        type: string
      description:
        description: ''
        type: string
      descriptions:
        description: ''
        type: array
      help:
        description: ''
        type: string
      mission_group_id:
        description: ''
        type: string
      name:
        description: ''
        type: string
      parameters:
        description: ''
        type: array
    type: object
  GetGroup_missions:
    properties:
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      name:
        description: The name of the mission
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetHelper_positions:
    properties:
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      map:
        description: The url to the map this position belongs to
        type: string
      name:
        description: The name of the position
        type: string
      type_id:
        description: The type of position. see the general description above
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMap:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global id unique across robots that identifies this map
        type: string
      map:
        description: If this map is navigation map or not
        format: byte
        type: string
      metadata:
        description: If this map is a web map or not
        format: byte
        type: string
      name:
        description: The name of the map
        type: string
      one_way_map:
        description: If this map is navigation map or not
        format: byte
        type: string
      origin_theta:
        description: The angle in the map of the center of the map relative to the
          robots position
        format: float
        type: number
      origin_x:
        description: The x-coordinate in the map of the center of the map relative
          to the robots position
        format: float
        type: number
      origin_y:
        description: The y-coordinate in the map of the center of the map relative
          to the robots position
        format: float
        type: number
      path_guides:
        description: The url to the list of path guides in this map
        type: string
      paths:
        description: The url to the list of paths in this map
        type: string
      positions:
        description: The url to the list of positions in this map
        type: string
      resolution:
        description: The resolution of the map
        format: float
        type: number
      session_id:
        description: The global id unique across robots of the area containing this
          map
        type: string
    type: object
  GetMap_area_event:
    properties:
      guid:
        description: The global id unique across robots that identifies this area
        type: string
      map:
        description: The url to the map this area belongs to
        type: string
      name:
        description: A name associated with this area
        type: string
      type_id:
        description: The type of area
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMap_path_guides:
    properties:
      guid:
        description: The global unique id across robots that identifies this path
          guide
        type: string
      name:
        description: The name of the path guide
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMap_paths:
    properties:
      goal_pos:
        description: The url to the end position of the path
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      start_pos:
        description: The url to the start position of the path
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMap_positions:
    properties:
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      map:
        description: The url to the map this position belongs to
        type: string
      name:
        description: The name of the position
        type: string
      type_id:
        description: The type of position. see the general description above
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMaps:
    properties:
      guid:
        description: The global id unique across robots that identifies this map
        type: string
      name:
        description: The name of the map
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMe:
    properties:
      guid:
        description: The global unique id across robots that identifies this user
        type: string
      name:
        description: The name of the user
        type: string
      url:
        description: The URL of the resource
        type: string
      user_group:
        description: Url for the user group this user is in
        type: string
      user_group_id:
        description: Global id of the user group this user is in
        type: string
    type: object
  GetMetrics:
    properties: {}
    type: object
  GetMission:
    properties:
      actions:
        description: The url to the list of actions contained in this mission
        type: string
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      definition:
        description: The url to the list of input parameters this mission accepts
        type: string
      description:
        description: The description of the mission
        type: string
      group_id:
        description: The id of the area this mission belongs to, or null if the mission
          belongs to all areas
        type: string
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      has_user_parameters:
        description: Indicates if the mission has dynamic parameters
        type: boolean
      hidden:
        description: If this mission is hidden in the mission list
        type: boolean
      is_template:
        description: True if the missions is a template mission
        type: boolean
      name:
        description: The name of the mission
        type: string
      session_id:
        description: The id of the area this mission belongs to, or null if the mission
          belongs to all areas
        type: string
      valid:
        description: Indicates if the mission contains only existing submissions
        type: boolean
    type: object
  GetMission_action:
    properties:
      action_type:
        description: The id of the type of action
        type: string
      created_by_id:
        description: User guid of the user of the mission which the action belongs
          to
        type: string
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      mission_id:
        description: The id of the mission the action belongs to
        type: string
      parameters:
        type: string
      priority:
        description: The priority of the action
        type: integer
      scope_reference:
        description: Reference to the scope in which the action belongs
        type: string
    type: object
  GetMission_actions:
    properties:
      action_type:
        description: The id of the type of action
        type: string
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      mission_id:
        description: The id of the mission the action belongs to
        type: string
      parameters:
        # Changed from `string`
        type: array
        items:
          type: object
      priority:
        description: The priority of the action
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMission_definition:
    properties:
      action_type:
        description: ''
        type: string
      name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMission_group:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      feature:
        description: The name of the position
        type: string
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      icon:
        description: The name of the position
        format: byte
        type: string
      name:
        description: The name of the position
        type: string
      priority:
        description: The name of the position
        type: integer
    type: object
  GetMission_groups:
    properties:
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      name:
        description: The name of the position
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMission_scheduler:
    properties:
      created_by:
        description: The url to the description of the type of this element
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      description:
        description: Inherited from mission description, when item was queued
        type: string
      earliest_start_time:
        description: The date and time at which the mission should start at the earliest
        format: date-time
        type: string
      finish_time:
        description: The date and time when the mission was finished
        format: date-time
        type: string
      fleet_schedule_guid:
        description: Unique identifier for the mission schedule element
        type: string
      high_priority:
        description: The urgency of the mission scheduled
        type: boolean
      id:
        description: The id of the mission schedule entry
        type: integer
      mission:
        description: The url to the mission that was scheduled
        type: string
      mission_id:
        description: The id identifying the mission scheduled by the scheduler
        type: string
      mission_name:
        description: The name of the mission scheduled by the scheduler
        type: string
      order_time:
        description: The date and time when the mission was scheduled
        format: date-time
        type: string
      parameters:
        type: object
      priority:
        description: The priority of the mission scheduled
        type: integer
      robot_id:
        description: The id of the robot to which the mission was assigned
        type: integer
      start_time:
        description: The date and time when the mission was started
        format: date-time
        type: string
      state:
        description: 'The state of the '
        type: string
    type: object
  GetMission_schedulers:
    properties:
      id:
        description: The id of the mission schedule entry
        type: integer
      state:
        description: 'The state of the '
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetMissions:
    properties:
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      name:
        description: The name of the mission
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPath:
    properties:
      autogenerated:
        description: If the path was autogenerated or not
        type: boolean
      footprint:
        description: The footprint of the robot for which this path was generated
        type: string
      goal_pos:
        description: The url to the end position of the path
        type: string
      goal_pos_id:
        description: The id of the end position of the path
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      last_used:
        description: The date and time of the last time this path was used
        format: date-time
        type: string
      length:
        description: The length of the path in meters
        format: float
        type: number
      map_crc:
        description: The crc for the path
        type: string
      path:
        description: A binary representation of the path
        format: byte
        type: string
      start_pos:
        description: The url to the start position of the path
        type: string
      start_pos_id:
        description: The id of the start position of the path
        type: string
      time:
        description: The time it took to drive the path the first time
        format: float
        type: number
      valid:
        description: If the path is valid or not
        type: boolean
    type: object
  GetPath_guide:
    properties:
      created_by:
        description: The url to the description of the type of this element
        type: string
      created_by_id:
        description: The global unique id of the user that created this path guide
        type: string
      goals_count:
        description: The number of goal positions in the path guide
        type: integer
      guid:
        description: The global unique id across robots that identifies this path
          guide
        type: string
      map_id:
        description: The global id of the map this path guide belongs to
        type: string
      name:
        description: The name of the path guide
        type: string
      options:
        description: The url to the list of position options for this path path
        type: string
      positions:
        description: The url to the list of positions used in this path guide
        type: string
      starts_count:
        description: The number of start positions in the path guide
        type: integer
      vias_count:
        description: The number of via positions in the path guide
        type: integer
    type: object
  GetPath_guide_options:
    properties:
      goals:
        description: The list of options for goal positions
        items:
          description: ''
          properties:
            name:
              description: The name of the position
              type: string
            pos_guid:
              description: The global unique id across robots that identifies this
                position
              type: string
          type: object
        type: array
      starts:
        description: The list of options for start positions
        items:
          description: ''
          properties:
            name:
              description: The name of the position
              type: string
            pos_guid:
              description: The global unique id across robots that identifies this
                position
              type: string
          type: object
        type: array
      vias:
        description: The list of options for via positions
        items:
          description: ''
          properties:
            name:
              description: The name of the position
              type: string
            pos_guid:
              description: The global unique id across robots that identifies this
                position
              type: string
          type: object
        type: array
    type: object
  GetPath_guide_position:
    properties:
      guid:
        description: The global unique id across robots of the position in the list
          of path constraints positions
        type: string
      path_guide_guid:
        description: The global unique id across robots of the path guide this position
          is related to
        type: string
      pos_guid:
        description: The global unique id across robots that identifies this position
        type: string
      pos_type:
        description: The type of position of the guide (start/via/goal)
        type: string
      priority:
        description: The order in which to follow the via positions in the path guide
        type: integer
    type: object
  GetPath_guide_positions:
    properties:
      guid:
        description: The global unique id across robots of the position in the list
          of path constraints positions
        type: string
      path_guide_guid:
        description: The global unique id across robots of the path guide this position
          is related to
        type: string
      pos_type:
        description: The type of position of the guide (start/via/goal)
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPath_guides:
    properties:
      guid:
        description: The global unique id across robots that identifies this path
          guide
        type: string
      name:
        description: The name of the path guide
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPath_guides_position:
    properties:
      guid:
        description: The global unique id across robots of the position in the list
          of path constraints positions
        type: string
      path_guide_guid:
        description: The global unique id across robots of the path guide this position
          is related to
        type: string
      pos_guid:
        description: The global unique id across robots that identifies this position
        type: string
      pos_type:
        description: The type of position of the guide (start/via/goal)
        type: string
      priority:
        description: The order in which to follow the via positions in the path guide
        type: integer
    type: object
  GetPath_guides_positions:
    properties:
      guid:
        description: The global unique id across robots of the position in the list
          of path constraints positions
        type: string
      path_guide_guid:
        description: The global unique id across robots of the path guide this position
          is related to
        type: string
      pos_type:
        description: The type of position of the guide (start/via/goal)
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPath_guides_precalc:
    properties:
      active:
        description: Boolean indicating if a path guide precalculation is in progress
        type: boolean
      fail_count:
        description: The number of paths that was not possible to precalculate
        type: integer
      message:
        description: Status message from the precalculation module
        type: string
      path_guide_guid:
        description: The global unique id across robots that identifies the path guide
          being precalculated
        type: string
      success_count:
        description: The number of paths that has been successfully calculated
        type: integer
      total_count:
        description: The number of total paths to calculate
        type: integer
    type: object
  GetPaths:
    properties:
      goal_pos:
        description: The url to the end position of the path
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      start_pos:
        description: The url to the start position of the path
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPermission:
    properties:
      endpoint:
        description: ''
        type: string
      guid:
        description: The global unique id across robots that identifies this permission
        type: string
      permission_type:
        description: The permission type
        type: string
      user_group_guid:
        description: The global id of the usergroup
        type: string
    type: object
  GetPermissions:
    properties:
      endpoint:
        description: ''
        type: string
      guid:
        description: The global unique id across robots that identifies this permission
        type: string
      permission_type:
        description: The permission type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPos_docking_offsets:
    properties:
      guid:
        description: The global id unique across robots that identifies this docking
          offset
        type: string
      name:
        description: The name of the docking offset. used for docking offset independent
          from positions.
        type: string
      position:
        description: The url to the position
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPosition:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      docking_offsets:
        description: The url to the possible docking offset. if the position does
          not have a docking offset then this field is empty
        type: string
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      help_positions:
        description: ''
        type: string
      map:
        description: The url to the map this position belongs to
        type: string
      map_id:
        description: The global id of the map this positions belongs to
        type: string
      name:
        description: The name of the position
        type: string
      orientation:
        description: The orientation of the position in degrees relative to origo
          of the underlying map
        format: float
        type: number
      parent:
        description: The url to the possible parent position. if the position does
          not have a parent position then this field is empty
        type: string
        x-nullable: true
      parent_id:
        description: The global id of the possible parent position of the current
          position. a parent position is a position related to the current position,
          for instance the parent position of a trolley left entry position is the
          actual trolley position. if the position does not have a parent position
          then this field is empty
        type: string
        x-nullable: true
      pos_x:
        description: The x-coordinate of the position relative to origo of the underlying
          map
        format: float
        type: number
      pos_y:
        description: The y-coordinate of the position relative to origo of the underlying
          map
        format: float
        type: number
      type:
        description: The url to the description of the type of this position
        type: string
      type_id:
        description: The type of position. see the general description above
        type: integer
    type: object
  GetPosition_transition_list:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      goal_pos_id:
        description: The id of the end position for the transition list
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      mission_id:
        description: The guid of the mission in the transition list
        type: string
      start_pos_id:
        description: The id of the start position for the transition list
        type: string
    type: object
  GetPosition_transition_list_from_session:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      goal_pos_id:
        description: The id of the end position for the transition list
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      mission_id:
        description: The guid of the mission in the transition list
        type: string
      start_pos_id:
        description: The id of the start position for the transition list
        type: string
    type: object
  GetPosition_transition_lists:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      goal_pos_id:
        description: The id of the end position for the transition list
        type: string
      guid:
        description: The global id unique across robots that identifies this path
        type: string
      mission_id:
        description: The guid of the mission in the transition list
        type: string
      start_pos_id:
        description: The id of the start position for the transition list
        type: string
    type: object
  GetPosition_type:
    properties:
      hidden:
        description: False if the position is not created by the user
        type: boolean
      id:
        description: Unique id for the position type
        type: integer
      name:
        description: Name of the position type
        type: string
      reachable_for_robot:
        description: True if the robot can actually go to that position
        type: boolean
    type: object
  GetPosition_types:
    properties:
      id:
        description: Unique id for the position type
        type: integer
      name:
        description: Name of the position type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPositions:
    properties:
      guid:
        description: The global id unique across robots that identifies this position
        type: string
      map:
        description: The url to the map this position belongs to
        type: string
      name:
        description: The name of the position
        type: string
      type_id:
        description: The type of position. see the general description above
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetPrompt:
    properties:
      answer:
        description: Answer to give to the prompt. only for put
        type: string
    type: object
  GetPrompt_answer:
    properties:
      answer:
        description: Answer to give to the prompt. only for put
        type: string
    type: object
  GetQualified_robots:
    properties:
      name:
        description: The name of the robot
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetRemote_support:
    properties: {}
    type: object
  GetRemote_support_log:
    properties: {}
    type: object
  GetResource_area:
    properties:
      assigned:
        type: string
      blocked_for_entry:
        description: ''
        type: boolean
      guid:
        description: The guid identifying this resource
        type: string
      map_id:
        description: The id of the map in which the resource resides
        type: integer
      max_robots:
        description: The maximum number of robots allowed
        type: integer
      name:
        description: The name of the resource
        type: string
      queue:
        type: string
    type: object
  GetResource_areas:
    properties:
      assigned:
        type: string
      blocked_for_entry:
        description: ''
        type: boolean
      guid:
        description: The guid identifying this resource
        type: string
      map_id:
        description: The id of the map in which the resource resides
        type: integer
      name:
        description: The name of the resource
        type: string
      queue:
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetResource_position:
    properties:
      assigned:
        type: string
      guid:
        description: The id identifying the resource
        type: string
      map_id:
        description: The id of the map in which the resource resides
        type: integer
      max_robots:
        description: The maximum number of robots allowed
        type: integer
      name:
        description: The name of the resource
        type: string
      queue:
        type: string
    type: object
  GetResource_positions:
    properties:
      assigned:
        type: string
      guid:
        description: The id identifying the resource
        type: string
      map_id:
        description: The id of the map in which the resource resides
        type: integer
      name:
        description: The name of the resource
        type: string
      queue:
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetRobot:
    properties:
      active:
        description: Boolean indicating if the robot is active in the fleet
        type: boolean
      created_by:
        description: ''
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      description:
        description: The description of the robot
        type: string
      factory_reset_needed:
        description: Boolean indicating if the robot needs to be factory reset when
          added to the fleet
        type: boolean
      fleet_state:
        description: Robot state with additional fleet releated states added
        type: integer
      fleet_state_text:
        description: Robot state with additional fleet releated states added
        type: string
      id:
        description: The id identifying the robot
        type: integer
      ip:
        description: The ip of the robot
        type: string
      operation_mode_info:
        # Changed from `string`
        type: object
      robot_group_id:
        description: The id of the robot group this robot belongs to
        type: integer
      robot_model:
        description: The robot model
        type: string
      serial_number:
        description: The serial number associated with the robot
        type: string
      status:
        # Changed from `string`
        type: '#/definitions/RobotStatus'
    type: object
  GetRobot_charging_group:
    properties:
      group_id:
        description: The id identifying the charging group associated with this entry
        type: integer
      robot_id:
        description: The id identifying the robot associated with this entry
        type: integer
    type: object
  GetRobot_charging_groups:
    properties:
      robot_id:
        description: The id identifying the robot associated with this entry
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetRobot_group:
    properties:
      allow_all_mission_groups:
        description: Boolean indicating if all mission groups can use robots from
          this robot group
        type: boolean
      created_by:
        description: ''
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      description:
        description: The description of the robot group
        type: string
      id:
        description: The id identifying the robot group
        type: integer
      name:
        description: The name of the robot group
        type: string
      robot_count:
        description: The number of robots in the group
        type: integer
    type: object
  GetRobot_group_mission_group:
    properties:
      mission_group_id:
        description: ''
        type: string
      robot_group_id:
        description: ''
        type: integer
    type: object
  GetRobot_group_mission_groups:
    properties:
      mission_group_id:
        description: ''
        type: string
      robot_group_id:
        description: ''
        type: integer
    type: object
  GetRobot_groups:
    properties:
      description:
        description: The description of the robot group
        type: string
      id:
        description: The id identifying the robot group
        type: integer
      name:
        description: The name of the robot group
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetRobot_scan:
    properties:
      already_exists:
        description: Boolean indicating if the robot already exists on the fleet
        type: boolean
      api_version:
        description: The api version used by the robot
        type: string
      battery_percentage:
        description: The global id of the user who created this entry
        format: float
        type: number
      ip:
        description: The ip of the robot
        type: string
      model:
        description: The model of the robot
        type: string
      name:
        description: The name of the robot
        type: string
      serial_number:
        description: The serial number of the robot
        type: string
      software_version:
        description: The software version of the robot
        type: string
      version_match:
        description: Boolean indicating if the software version matches the fleet
          version
        type: boolean
    type: object
  GetRobots:
    properties:
      active:
        description: Boolean indicating if the robot is active in the fleet
        type: boolean
      created_by:
        description: ''
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      description:
        description: The description of the robot
        type: string
      factory_reset_needed:
        description: Boolean indicating if the robot needs to be factory reset when
          added to the fleet
        type: boolean
      fleet_state:
        description: Robot state with additional fleet releated states added
        type: integer
      fleet_state_text:
        description: Robot state with additional fleet releated states added
        type: string
      id:
        description: The id identifying the robot
        type: integer
      ip:
        description: The ip of the robot
        type: string
      operation_mode_info:
        type: string
      robot_group_id:
        description: The id of the robot group this robot belongs to
        type: integer
      robot_model:
        description: The robot model
        type: string
      serial_number:
        description: The serial number associated with the robot
        type: string
      status:
        type: string
    type: object
  GetRobots_charging_groups:
    properties:
      group_id:
        description: The id identifying the charging group
        type: integer
    type: object
  GetRobots_scan:
    properties:
      ip:
        description: The ip of the robot
        type: string
      name:
        description: The name of the robot
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetService_book:
    properties:
      created_at:
        description: Creation time of the service note
        type: string
      created_by:
        description: The url to the user
        type: string
      created_by_id:
        description: The user which created the log
        type: string
      created_by_name:
        description: The user name which created the log
        type: string
      description:
        description: The sevice note
        type: string
      guid:
        description: The global unique id across robots that identifies this service
          note
        type: string
      owner_group:
        description: The url to the owner group
        type: string
      owner_group_guid:
        description: 'The usergroup which owns the service book '
        type: string
      owner_group_name:
        description: The group name which owns the log
        type: string
    type: object
  GetService_books:
    properties:
      created_at:
        description: Creation time of the service note
        type: string
      created_by:
        description: The url to the user
        type: string
      created_by_id:
        description: The user which created the log
        type: string
      created_by_name:
        description: The user name which created the log
        type: string
      description:
        description: The sevice note
        type: string
      guid:
        description: The global unique id across robots that identifies this service
          note
        type: string
      owner_group:
        description: The url to the owner group
        type: string
      owner_group_guid:
        description: 'The usergroup which owns the service book '
        type: string
      owner_group_name:
        description: The group name which owns the log
        type: string
    type: object
  GetSession:
    properties:
      active:
        description: Boolean indicating whether the session is the active session
          in the fleet
        type: boolean
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      description:
        description: A possible description of the area
        type: string
      export:
        description: ''
        type: string
      guid:
        description: The global id unique across robots that identifies this area
        type: string
      maps:
        description: The url to the list of maps that is in this area
        type: string
      name:
        description: The name of the area
        type: string
    type: object
  GetSession_elevator_floors:
    properties:
      guid:
        description: The global id unique across robots that identifies this elevator
          floor
        type: string
      map:
        description: ''
        type: string
      map_guid:
        description: The map id associated with the floor
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSession_elevators:
    properties:
      guid:
        description: The global id unique across robots that identifies this elevator
        type: string
      name:
        description: The name of the elevator
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSession_export:
    properties: {}
    type: object
  GetSession_import:
    properties:
      error_message:
        description: A description of this action
        type: string
      sessions_imported:
        description: The type of area action
        type: integer
      sessions_total:
        description: A name associated with this area action
        type: integer
      status:
        description: A nice name associated with this area action
        type: integer
    type: object
  GetSession_maps:
    properties:
      guid:
        description: The global id unique across robots that identifies this map
        type: string
      name:
        description: The name of the map
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSession_missions:
    properties:
      guid:
        description: The global id unique across robots that identifies this mission
        type: string
      name:
        description: The name of the mission
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSessions:
    properties:
      guid:
        description: The global id unique across robots that identifies this area
        type: string
      name:
        description: The name of the area
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSetting:
    properties:
      children_ids:
        type: string
      constraints:
        type: string
      default:
        description: ''
        type: string
      description:
        description: ''
        type: string
      editable:
        type: string
      fieldtype:
        description: ''
        type: string
      full_name:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_id:
        type: string
      parent_name:
        description: ''
        type: string
      parent_value:
        type: string
      settings_group:
        description: ''
        type: string
      settings_group_id:
        description: ''
        type: integer
      type:
        description: ''
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSetting_advanced:
    properties:
      children_ids:
        type: string
      constraints:
        type: string
      default:
        description: ''
        type: string
      description:
        description: ''
        type: string
      editable:
        type: string
      fieldtype:
        description: ''
        type: string
      full_name:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_id:
        type: string
      parent_name:
        description: ''
        type: string
      parent_value:
        type: string
      settings_group:
        description: ''
        type: string
      settings_group_id:
        description: ''
        type: integer
      type:
        description: ''
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSetting_group:
    properties:
      advanced_settings_count:
        description: ''
        type: integer
      description:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      priority:
        description: ''
        type: integer
      settings_count:
        description: ''
        type: integer
    type: object
  GetSetting_group_advanced_settings:
    properties:
      default:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSetting_group_settings:
    properties:
      default:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSetting_groups:
    properties:
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSettings:
    properties:
      default:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSettings_advanced:
    properties:
      default:
        description: ''
        type: string
      id:
        description: ''
        type: integer
      name:
        description: ''
        type: string
      parent_name:
        description: ''
        type: string
      url:
        description: The URL of the resource
        type: string
      value:
        description: ''
        type: string
    type: object
  GetSoftware_backup:
    properties:
      date:
        description: The date where the backup was created
        format: date-time
        type: string
      guid:
        description: The guid of the software backup
        type: string
      state:
        description: The state of the software backup
        type: string
      version:
        description: The version of the software backup
        type: string
    type: object
  GetSoftware_backups:
    properties:
      date:
        description: The date where the backup was created
        format: date-time
        type: string
      guid:
        description: The guid of the software backup
        type: string
      state:
        description: The state of the software backup
        type: string
      url:
        description: The URL of the resource
        type: string
      version:
        description: The version of the software backup
        type: string
    type: object
  GetSoftware_log:
    properties:
      action:
        description: The action performed (upgrade/restore)
        type: string
      end_time:
        description: The end time of the upgrade
        format: date-time
        type: string
      from:
        description: The software version upgrading from
        type: string
      guid:
        description: The guid of upgrade entry
        type: string
      message:
        description: The status message from upgrade
        type: string
      start_time:
        description: The start time of the upgrade
        format: date-time
        type: string
      state:
        description: The state of the upgrade (succeeded/failed/started
        type: string
      to:
        description: The software version upgrading to
        type: string
    type: object
  GetSoftware_logs:
    properties:
      action:
        description: The action performed (upgrade/restore)
        type: string
      end_time:
        description: The end time of the upgrade
        format: date-time
        type: string
      from:
        description: The software version upgrading from
        type: string
      guid:
        description: The guid of upgrade entry
        type: string
      start_time:
        description: The start time of the upgrade
        format: date-time
        type: string
      state:
        description: The state of the upgrade (succeeded/failed/started
        type: string
      to:
        description: The software version upgrading to
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSoftware_upgrade:
    properties:
      guid:
        description: The guid of the software upgrade
        type: string
      upload_date:
        description: The upload date of the software upgrade
        format: date-time
        type: string
      version:
        description: The version of the software upgrade
        type: string
    type: object
  GetSoftware_upgrades:
    properties:
      guid:
        description: The guid of the software upgrade
        type: string
      upload_date:
        description: The upload date of the software upgrade
        format: date-time
        type: string
      url:
        description: The URL of the resource
        type: string
      version:
        description: The version of the software upgrade
        type: string
    type: object
  GetSound:
    properties:
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global id unique across robots that identifies this sound
        type: string
      length:
        description: The length of the sound in the format hh:mm:ss
        type: string
      name:
        description: The name of the sound
        type: string
      note:
        description: A possible description of the sound
        type: string
      sound:
        description: A binary representation of the sound
        format: byte
        type: string
      stream:
        description: The url to stream the raw audio
        type: string
      volume:
        description: The volumne of the sound when played
        type: integer
    type: object
  GetSound_stream:
    properties: {}
    type: object
  GetSounds:
    properties:
      guid:
        description: The global id unique across robots that identifies this sound
        type: string
      length:
        description: The length of the sound in the format hh:mm:ss
        type: string
      name:
        description: The name of the sound
        type: string
      url:
        description: The URL of the resource
        type: string
      volume:
        description: The volumne of the sound when played
        type: integer
    type: object
  GetState:
    properties:
      default_state:
        description: The default state of the fleet
        type: string
      state:
        description: The current state of the fleet
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSw_version_status:
    properties:
      factory_restored:
        description: A flag showing if the robot has been factory restored from the
          fleet after the sw_guid_mismatch has been last detected
        type: integer
      sw_guid_mismatch:
        description: A flag showing the mismatch between the actual software guid
          of the robot and the one stored in the fleet
        type: integer
      url:
        description: The URL of the resource
        type: string
    type: object
  GetSystem_info:
    properties: {}
    type: object
  GetUser:
    properties:
      create_time:
        description: Creation time of the user
        type: string
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      dashboard_id:
        description: ''
        type: string
      email:
        description: The email of the user
        type: string
      guid:
        description: The global unique id across robots that identifies this user
        type: string
      name:
        description: The name of the user
        type: string
      pincode:
        description: Pincode for the user
        type: string
      single_dashboard:
        description: ''
        type: boolean
      update_time:
        description: Last time the user was updated
        type: string
      url:
        description: Url to this user
        type: string
      user_group:
        description: Url for the user group this user is in
        type: string
      user_group_id:
        description: Global id of the user group this user is in
        type: string
      username:
        description: The username of the user
        type: string
    type: object
  GetUser_group:
    properties:
      create_time:
        description: Creation time of the usergroup
        type: string
      created_by:
        description: The url to the description of the type of this position
        type: string
      created_by_id:
        description: The global id of the user who created this entry
        type: string
      guid:
        description: The global unique id across robots that identifies this usergroup
        type: string
      name:
        description: Name of the usergroup
        type: string
      update_time:
        description: Last time the usergroup was updated
        type: string
    type: object
  GetUser_group_permission:
    properties:
      endpoint:
        description: ''
        type: string
      guid:
        description: The global unique id across robots that identifies this permission
        type: string
      permission_type:
        description: The permission type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetUser_groups:
    properties:
      guid:
        description: The global unique id across robots that identifies this usergroup
        type: string
      name:
        description: Name of the usergroup
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetUser_me_permissions:
    properties:
      endpoint:
        description: ''
        type: string
      guid:
        description: The global unique id across robots that identifies this permission
        type: string
      permission_type:
        description: The permission type
        type: string
      url:
        description: The URL of the resource
        type: string
    type: object
  GetUsers:
    properties:
      guid:
        description: The global unique id across robots that identifies this user
        type: string
      name:
        description: The name of the user
        type: string
      url:
        description: The URL of the resource
        type: string
      user_group:
        description: Url for the user group this user is in
        type: string
      user_group_id:
        description: Global id of the user group this user is in
        type: string
    type: object
  GetUsers_auth:
    properties:
      expiration_time:
        format: date-time
        type: string
      ip:
        type: string
      login_time:
        format: date-time
        type: string
      token:
        type: string
      user_id:
        type: string
    type: object
  PostAction_definition:
    properties:
      parameters:
        items:
          type: object
        type: array
    required:
    - parameters
    type: object
  PostArea_events:
    properties:
      actions:
        items:
          type: object
        type: array
      created_by_id:
        type: string
      guid:
        type: string
      map_id:
        type: string
      name:
        description: 'Max length: 255'
        type: string
      polygon:
        items:
          type: object
        type: array
      type_id:
        format: float
        type: integer
    required:
    - type_id
    - polygon
    - map_id
    type: object
  PostCart_calibrations:
    properties:
      created_by_id:
        type: string
      drive_height:
        format: float
        type: integer
      entry_height:
        format: float
        type: integer
      guid:
        type: string
      lock_height:
        format: float
        type: integer
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      qw:
        format: float
        type: number
      qx:
        format: float
        type: number
      qy:
        format: float
        type: number
      qz:
        format: float
        type: number
      standard:
        type: boolean
      x:
        format: float
        type: number
      y:
        format: float
        type: number
      z:
        format: float
        type: number
    required:
    - name
    - x
    - y
    - z
    - qx
    - qy
    - qz
    - qw
    - entry_height
    - lock_height
    - drive_height
    - standard
    type: object
  PostCart_types:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      height:
        format: float
        type: number
      length:
        format: float
        type: number
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      offset_locked_wheels:
        format: float
        type: number
      width:
        format: float
        type: number
    required:
    - name
    - length
    - width
    - height
    - offset_locked_wheels
    type: object
  PostCarts:
    properties:
      cart_calibration_id:
        type: string
      cart_type_id:
        type: string
      created_by_id:
        type: string
      guid:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    required:
    - name
    - cart_calibration_id
    - cart_type_id
    type: object
  PostCert:
    properties:
      cert_key_file:
        format: byte
        type: string
      cert_pem_file:
        format: byte
        type: string
    required:
    - cert_pem_file
    - cert_key_file
    type: object
  PostChargers:
    properties:
      charger_id:
        type: string
      group_id:
        format: float
        type: integer
    required:
    - charger_id
    - group_id
    type: object
  PostCharging_groups:
    properties:
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    required:
    - name
    type: object
  PostDashboard_widgets:
    properties:
      dashboard_id:
        description: ''
        type: string
      guid:
        type: string
      settings:
        description: ''
        type: string
    required:
    - dashboard_id
    type: object
  PostDashboards:
    properties:
      created_by_id:
        type: string
      fleet_dashboard:
        type: boolean
      guid:
        type: string
      name:
        description: 'Min length: 1, Max length: 128'
        type: string
    required:
    - name
    type: object
  PostDocking_offsets:
    properties:
      created_by_id:
        type: string
      docking_type:
        format: float
        type: integer
      guid:
        type: string
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
      orientation_offset:
        format: float
        type: number
      pos_id:
        type: string
      x_offset:
        format: float
        type: number
      y_offset:
        format: float
        type: number
    required:
    - name
    - x_offset
    - y_offset
    - orientation_offset
    type: object
  PostElevator_cmd_control:
    properties:
      request:
        type: boolean
    required:
    - request
    type: object
  PostElevator_cmd_door:
    properties:
      door_front:
        type: boolean
      door_rear:
        type: boolean
      open:
        type: boolean
    required:
    - door_front
    - door_rear
    - open
    type: object
  PostElevator_cmd_floor:
    properties:
      door_front:
        type: boolean
      door_rear:
        type: boolean
      floor:
        format: float
        type: integer
    required:
    - floor
    type: object
  PostElevator_floors:
    properties:
      created_by_id:
        type: string
      door:
        format: float
        type: integer
      elevator_entry_pos_guid:
        type: string
      elevator_guid:
        type: string
      elevator_pos_guid:
        type: string
      entry_mission_guid:
        type: string
      exit_mission_guid:
        type: string
      floor:
        format: float
        type: integer
      guid:
        type: string
      map_guid:
        type: string
    required:
    - elevator_guid
    - map_guid
    - elevator_entry_pos_guid
    - elevator_pos_guid
    - door
    - floor
    type: object
  PostElevator_group_rel_elevator:
    properties:
      elevator_guid:
        description: 'Min length: 1, Max length: 40'
        type: string
      group_id:
        format: float
        type: integer
    required:
    - elevator_guid
    - group_id
    type: object
  PostElevator_group_rel_robot:
    properties:
      robot_id:
        format: float
        type: integer
    required:
    - robot_id
    type: object
  PostElevator_groups:
    properties:
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    required:
    - name
    type: object
  PostElevators:
    properties:
      active:
        type: boolean
      authentication:
        description: ''
        type: string
      created_by_id:
        type: string
      driver:
        description: ''
        type: string
      guid:
        type: string
      ip:
        type: string
      name:
        description: ''
        type: string
      namespace:
        description: ''
        type: string
      one_way:
        format: float
        type: integer
      password:
        description: ''
        type: string
      port:
        format: float
        type: integer
      security_policy:
        description: ''
        type: string
      session_guid:
        type: string
      turn_in_place:
        type: boolean
      username:
        description: ''
        type: string
    required:
    - session_guid
    - name
    - ip
    - driver
    type: object
  PostError_reports:
    properties:
      description:
        description: 'Min length: 1, Max length: 255'
        type: string
    required:
    - description
    type: object
  PostEvacuations:
    properties:
      evacuation_activated:
        type: boolean
      note:
        description: 'Max length: 128'
        type: string
    required:
    - evacuation_activated
    type: object
  PostFactory_reset_from_fleet:
    properties:
      robot_id:
        format: float
        type: integer
    required:
    - robot_id
    type: object
  PostFootprints:
    properties:
      config_id:
        description: ''
        type: string
      created_by_id:
        type: string
      footprint_points:
        description: ''
        type: string
      guid:
        type: string
      height:
        format: float
        type: number
      hook:
        type: boolean
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
    required:
    - name
    - height
    - footprint_points
    - config_id
    - hook
    type: object
  PostMaps:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      map:
        format: byte
        type: string
      metadata:
        format: byte
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      one_way_map:
        format: byte
        type: string
      origin_theta:
        format: float
        type: number
      origin_x:
        format: float
        type: number
      origin_y:
        format: float
        type: number
      resolution:
        format: float
        type: number
      session_id:
        type: string
    required:
    - session_id
    - name
    - metadata
    - map
    - resolution
    - origin_x
    - origin_y
    - origin_theta
    type: object
  PostMission_actions:
    properties:
      action_type:
        description: 'Min length: 1, Max length: 255'
        type: string
      guid:
        type: string
      mission_id:
        type: string
      parameters:
        items:
          type: object
        type: array
      priority:
        format: float
        type: integer
      scope_reference:
        type: string
    required:
    - action_type
    - mission_id
    - priority
    - parameters
    type: object
  PostMission_groups:
    properties:
      created_by_id:
        type: string
      feature:
        description: 'Min length: 1, Max length: 63'
        type: string
      guid:
        type: string
      icon:
        format: byte
        type: string
      name:
        description: 'Min length: 1, Max length: 63'
        type: string
      priority:
        format: float
        type: integer
    required:
    - name
    - priority
    - feature
    - icon
    type: object
  PostMission_schedulers:
    properties:
      created_by_id:
        type: string
      description:
        description: 'Max length: 200'
        type: string
      earliest_start_time:
        format: date-time
        type: string
      high_priority:
        type: boolean
      mission_id:
        type: string
      parameters:
        items:
          type: object
        type: array
      priority:
        format: float
        type: integer
      robot_id:
        format: float
        type: integer
    required:
    - mission_id
    type: object
  PostMissions:
    properties:
      created_by_id:
        type: string
      description:
        description: 'Max length: 255'
        type: string
      group_id:
        type: string
      guid:
        type: string
      hidden:
        type: boolean
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
      session_id:
        type: string
    required:
    - name
    - group_id
    type: object
  PostPath_guide_positions:
    properties:
      guid:
        type: string
      path_guide_guid:
        type: string
      pos_guid:
        type: string
      pos_type:
        description: ''
        type: string
      priority:
        format: float
        type: integer
    required:
    - path_guide_guid
    - pos_guid
    - pos_type
    type: object
  PostPath_guides:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      map_id:
        type: string
      name:
        description: 'Min length: 1, Max length: 128'
        type: string
    required:
    - name
    - map_id
    type: object
  PostPath_guides_positions:
    properties:
      guid:
        type: string
      path_guide_guid:
        type: string
      pos_guid:
        type: string
      pos_type:
        description: ''
        type: string
      priority:
        format: float
        type: integer
    required:
    - path_guide_guid
    - pos_guid
    - pos_type
    type: object
  PostPath_guides_precalc:
    properties:
      command:
        description: ''
        type: string
      guid:
        type: string
    required:
    - command
    - guid
    type: object
  PostPaths:
    properties:
      autogenerated:
        type: boolean
      footprint:
        description: 'Max length: 255'
        type: string
      goal_pos_id:
        type: string
      guid:
        type: string
      last_used:
        format: date-time
        type: string
      length:
        format: float
        type: number
      map_crc:
        description: 'Min length: 32, Max length: 32'
        type: string
      path:
        format: byte
        type: string
      start_pos_id:
        type: string
      time:
        format: float
        type: number
      valid:
        type: boolean
    required:
    - start_pos_id
    - goal_pos_id
    - length
    - time
    - path
    - footprint
    - map_crc
    - last_used
    - autogenerated
    - valid
    type: object
  PostPermissions:
    properties:
      endpoint:
        description: 'Min length: 1, Max length: 255'
        type: string
      guid:
        type: string
      permission_type:
        description: ''
        type: string
      user_group_guid:
        type: string
    required:
    - endpoint
    - permission_type
    - user_group_guid
    type: object
  PostPosition_transition_lists:
    properties:
      created_by_id:
        type: string
      goal_pos_id:
        type: string
      guid:
        type: string
      mission_id:
        type: string
      start_pos_id:
        type: string
    required:
    - start_pos_id
    - goal_pos_id
    - mission_id
    type: object
  PostPositions:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      map_id:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      orientation:
        format: float
        type: number
      parent_id:
        type: string
      pos_x:
        format: float
        type: number
      pos_y:
        format: float
        type: number
      type_id:
        format: float
        type: integer
    required:
    - name
    - pos_x
    - pos_y
    - orientation
    - type_id
    - map_id
    type: object
  PostRobot_charging_groups:
    properties:
      group_id:
        format: float
        type: integer
      robot_id:
        format: float
        type: integer
    required:
    - robot_id
    - group_id
    type: object
  PostRobot_group_mission_groups:
    properties:
      mission_group_id:
        type: string
    required:
    - mission_group_id
    type: object
  PostRobot_groups:
    properties:
      allow_all_mission_groups:
        type: boolean
      created_by_id:
        type: string
      description:
        description: 'Min length: 3, Max length: 255'
        type: string
      name:
        description: 'Min length: 3, Max length: 63'
        type: string
    required:
    - name
    type: object
  PostRobots:
    properties:
      active:
        type: boolean
      created_by_id:
        type: string
      description:
        description: 'Min length: 3, Max length: 255'
        type: string
      factory_reset_needed:
        type: boolean
      ip:
        type: string
      robot_group_id:
        format: float
        type: integer
    required:
    - ip
    - robot_group_id
    type: object
  PostService_books:
    properties:
      description:
        description: 'Min length: 1, Max length: 2056'
        type: string
      guid:
        type: string
    required:
    - description
    type: object
  PostSession_import:
    properties:
      file:
        type: string
    required:
    - file
    type: object
  PostSessions:
    properties:
      created_by_id:
        type: string
      description:
        description: 'Max length: 255'
        type: string
      guid:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    required:
    - name
    type: object
  PostSounds:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      note:
        description: 'Max length: 255'
        type: string
      sound:
        format: binary
        type: string
      volume:
        format: float
        type: integer
    required:
    - name
    - sound
    type: object
  PostUser_group_permission:
    properties:
      endpoint:
        description: 'Min length: 1, Max length: 255'
        type: string
      guid:
        type: string
      permission_type:
        description: ''
        type: string
      user_group_guid:
        type: string
    required:
    - endpoint
    - permission_type
    - user_group_guid
    type: object
  PostUser_groups:
    properties:
      created_by_id:
        type: string
      guid:
        type: string
      name:
        description: 'Min length: 2, Max length: 255'
        type: string
    required:
    - name
    type: object
  PostUsers:
    properties:
      created_by_id:
        type: string
      dashboard_id:
        type: string
      email:
        type: string
      guid:
        type: string
      name:
        description: 'Min length: 2, Max length: 255'
        type: string
      password:
        type: string
      pincode:
        type: string
      single_dashboard:
        type: boolean
      user_group_id:
        type: string
      username:
        description: 'Min length: 2, Max length: 63'
        type: string
    required:
    - username
    - password
    - name
    - user_group_id
    type: object
  PutArea_event:
    properties:
      actions:
        items:
          type: object
        type: array
      name:
        description: 'Max length: 255'
        type: string
      polygon:
        items:
          type: object
        type: array
    type: object
  PutBlock_area:
    properties:
      block:
        type: boolean
    type: object
  PutCart:
    properties:
      cart_calibration_id:
        type: string
      cart_type_id:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    type: object
  PutCart_calibration:
    properties:
      drive_height:
        format: float
        type: integer
      entry_height:
        format: float
        type: integer
      lock_height:
        format: float
        type: integer
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      qw:
        format: float
        type: number
      qx:
        format: float
        type: number
      qy:
        format: float
        type: number
      qz:
        format: float
        type: number
      standard:
        type: boolean
      x:
        format: float
        type: number
      y:
        format: float
        type: number
      z:
        format: float
        type: number
    type: object
  PutCart_type:
    properties:
      height:
        format: float
        type: number
      length:
        format: float
        type: number
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      offset_locked_wheels:
        format: float
        type: number
      width:
        format: float
        type: number
    type: object
  PutCharging_group:
    properties:
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    type: object
  PutDashboard:
    properties:
      name:
        description: 'Min length: 1, Max length: 128'
        type: string
    type: object
  PutDashboard_widget:
    properties:
      settings:
        description: ''
        type: string
    type: object
  PutDocking_offset:
    properties:
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
      orientation_offset:
        format: float
        type: number
      x_offset:
        format: float
        type: number
      y_offset:
        format: float
        type: number
    type: object
  PutElevator:
    properties:
      active:
        type: boolean
      authentication:
        description: 'Choices are: {"Anonymous", "Username", "Certificate"}'
        type: string
      driver:
        description: 'Choices are: {"Hitachi", "OPC_UA"}'
        type: string
      ip:
        type: string
      name:
        description: ''
        type: string
      namespace:
        description: ''
        type: string
      one_way:
        format: float
        type: integer
      password:
        description: ''
        type: string
      port:
        format: float
        type: integer
      session_guid:
        type: string
      turn_in_place:
        type: boolean
      username:
        description: ''
        type: string
    type: object
  PutElevator_floor:
    properties:
      door:
        format: float
        type: integer
      elevator_entry_pos_guid:
        type: string
      elevator_guid:
        type: string
      elevator_pos_guid:
        type: string
      entry_mission_guid:
        type: string
      exit_mission_guid:
        type: string
      floor:
        format: float
        type: integer
      map_guid:
        type: string
    type: object
  PutElevator_group:
    properties:
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    type: object
  PutFire_alarm:
    properties:
      alarm_on:
        type: boolean
      note:
        description: 'Max length: 128'
        type: string
      trigger_time:
        format: date-time
        type: string
    type: object
  PutFootprint:
    properties:
      config_id:
        description: 'Choices are: {"MIR500-1000", "MIR600-1350", "MIR100-200", "MIR250",
          "UNKNOWN"}'
        type: string
      footprint_points:
        description: ''
        type: string
      height:
        format: float
        type: number
      hook:
        type: boolean
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
    type: object
  PutMap:
    properties:
      map:
        format: byte
        type: string
      metadata:
        format: byte
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      one_way_map:
        format: byte
        type: string
      origin_theta:
        format: float
        type: number
      origin_x:
        format: float
        type: number
      origin_y:
        format: float
        type: number
      resolution:
        format: float
        type: number
    type: object
  PutMe:
    properties:
      dashboard_id:
        type: string
      email:
        type: string
      name:
        description: 'Min length: 2, Max length: 255'
        type: string
      password:
        type: string
      pincode:
        type: string
      single_dashboard:
        type: boolean
      user_group_id:
        type: string
      username:
        description: 'Min length: 2, Max length: 63'
        type: string
    type: object
  PutMission:
    properties:
      description:
        description: 'Max length: 255'
        type: string
      group_id:
        type: string
      hidden:
        type: boolean
      name:
        description: 'Min length: 1, Max length: 255'
        type: string
      session_id:
        type: string
    type: object
  PutMission_action:
    properties:
      parameters:
        items:
          type: object
        type: array
      priority:
        format: float
        type: integer
      scope_reference:
        type: string
    type: object
  PutMission_group:
    properties:
      feature:
        description: 'Min length: 1, Max length: 63'
        type: string
      icon:
        format: byte
        type: string
      name:
        description: 'Min length: 1, Max length: 63'
        type: string
      priority:
        format: float
        type: integer
    type: object
  PutMission_scheduler:
    properties:
      earliest_start_time:
        format: date-time
        type: string
      high_priority:
        type: boolean
      mission_id:
        type: string
      priority:
        format: float
        type: integer
      robot_id:
        format: float
        type: integer
    type: object
  PutPath:
    properties:
      autogenerated:
        type: boolean
      footprint:
        description: 'Max length: 255'
        type: string
      goal_pos_id:
        type: string
      last_used:
        format: date-time
        type: string
      length:
        format: float
        type: number
      map_crc:
        description: 'Min length: 32, Max length: 32'
        type: string
      path:
        format: byte
        type: string
      start_pos_id:
        type: string
      time:
        format: float
        type: number
      valid:
        type: boolean
    type: object
  PutPath_guide:
    properties:
      map_id:
        type: string
      name:
        description: 'Min length: 1, Max length: 128'
        type: string
    type: object
  PutPath_guide_position:
    properties:
      pos_guid:
        type: string
      priority:
        format: float
        type: integer
    type: object
  PutPath_guides_position:
    properties:
      pos_guid:
        type: string
      priority:
        format: float
        type: integer
    type: object
  PutPosition:
    properties:
      map_id:
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      orientation:
        format: float
        type: number
      parent_id:
        type: string
      pos_x:
        format: float
        type: number
      pos_y:
        format: float
        type: number
      type_id:
        format: float
        type: integer
    type: object
  PutPosition_transition_list:
    properties:
      goal_pos_id:
        type: string
      mission_id:
        type: string
      start_pos_id:
        type: string
    type: object
  PutPrompt_answer:
    properties:
      answer:
        description: ''
        type: string
    type: object
  PutRemote_support:
    properties:
      connection_countdown:
        format: float
        type: number
    type: object
  PutRobot:
    properties:
      active:
        type: boolean
      description:
        description: 'Min length: 3, Max length: 255'
        type: string
      robot_group_id:
        format: float
        type: integer
    type: object
  PutRobot_group:
    properties:
      allow_all_mission_groups:
        type: boolean
      description:
        description: 'Min length: 3, Max length: 255'
        type: string
      name:
        description: 'Min length: 3, Max length: 63'
        type: string
    type: object
  PutSession:
    properties:
      active:
        type: boolean
      description:
        description: 'Max length: 255'
        type: string
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
    type: object
  PutSetting:
    properties:
      value:
        description: 'Max length: 700'
        type: string
    type: object
  PutSetting_advanced:
    properties:
      value:
        description: 'Max length: 700'
        type: string
    type: object
  PutSound:
    properties:
      name:
        description: 'Min length: 1, Max length: 40'
        type: string
      note:
        description: 'Max length: 255'
        type: string
      sound:
        format: binary
        type: string
      volume:
        format: float
        type: integer
    type: object
  PutState:
    properties:
      datetime:
        format: date-time
        type: string
      name:
        description: ''
        type: string
      state:
        description: 'Choices are: {"normal", "maintenance"}'
        type: string
    type: object
  PutUser:
    properties:
      dashboard_id:
        type: string
      email:
        type: string
      name:
        description: 'Min length: 2, Max length: 255'
        type: string
      password:
        type: string
      pincode:
        type: string
      single_dashboard:
        type: boolean
      user_group_id:
        type: string
      username:
        description: 'Min length: 2, Max length: 63'
        type: string
    type: object
  PutUser_group:
    properties:
      name:
        description: 'Min length: 2, Max length: 255'
        type: string
    type: object
  # The definitions below are manually added based on actual response from the server.
  RobotStatus:
    type: object
    properties:
      joystick_low_speed_mode_enabled:
        type: boolean
      mode_id:
        type: integer
      moved:
        type: number
      mission_queue_id:
        type: integer
      header:
        type: object
        properties:
          stamp:
            type: object
            properties:
              secs:
                type: integer
              nsecs:
                type: integer
          frame_id:
            type: string
          seq:
            type: integer
      robot_name:
        type: string
      uptime:
        type: integer
      errors:
        type: array
        items: {}
      unloaded_map_changes:
        type: boolean
      distance_to_next_target:
        type: integer
      battery_voltage:
        type: integer
      mode_key_state:
        type: string
      battery_percentage:
        type: number
      map_id:
        type: string
      software_version:
        type: string
      safety_system_muted:
        type: boolean
      mission_text:
        type: string
      velocity:
        type: object
        properties:
          linear:
            type: integer
          angular:
            type: integer
      state_text:
        type: string
      position:
        type: object
        properties:
          y:
            type: number
          x:
            type: number
          orientation:
            type: number
      footprint:
        type: string
      user_prompt:
        type: object
        properties:
          question:
            type: string
          has_request:
            type: boolean
          timeout:
            type: object
            properties:
              secs:
                type: integer
              nsecs:
                type: integer
          user_group:
            type: string
          guid:
            type: string
          options:
            type: array
            items: {}
      mode_text:
        type: string
      hook_status:
        type: object
        properties:
          trolley:
            type: object
            properties:
              width:
                type: integer
              length:
                type: integer
              offset_locked_wheels:
                type: integer
              id:
                type: integer
              height:
                type: integer
          available:
            type: boolean
          trolley_attached:
            type: boolean
      session_id:
        type: string
      joystick_web_session_id:
        type: string
      hook_data:
        type: object
        properties:
          angle:
            type: object
            properties:
              timestamp:
                type: object
                properties:
                  secs:
                    type: integer
                  nsecs:
                    type: integer
              angle:
                type: integer
          height_state:
            type: integer
          brake_state:
            type: integer
          height:
            type: integer
          length:
            type: integer
          gripper_state:
            type: integer
      battery_time_remaining:
        type: integer
      state_id:
        type: integer
info:
  contact:
    email: support@mir-robots.com
  description: The REST API for the 2.13.5.3 interface of FLEET
  title: 2.13.5.3 FLEET REST API
  version: 2.13.5.3
parameters:
  language:
    default: en_US
    description: Language header
    enum:
    - en_US
    - de_DE
    - es_ES
    - da_DK
    - zh_CN
    in: header
    name: Accept-Language
    required: true
    type: string
paths:
  /actions:
    get:
      description: Retrieve the list of action definitions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetAction_definitions'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /actions
      tags:
      - Actions
  /actions/{action_type}:
    get:
      description: Retrieve the details about the action. It displays the parameters
        of the action and the limits for the values among others
      parameters:
      - $ref: '#/parameters/language'
      - description: The action_type to search for
        in: path
        name: action_type
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetAction_definition'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /actions/{action_type}
      tags:
      - Actions
    post:
      description: Add a new action definition with the specified action_type
      parameters:
      - $ref: '#/parameters/language'
      - description: The action_type to add the new resource to
        in: path
        name: action_type
        required: true
        type: string
      - description: The details of the action_definition
        in: body
        name: Action_definition
        required: true
        schema:
          $ref: '#/definitions/PostAction_definition'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetAction_definition'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /actions/{action_type}
      tags:
      - Actions
  /area_events:
    get:
      description: Retrieve the list of area events
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetArea_events'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /area_events
      tags:
      - Area_events
    post:
      description: Add a new area event
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the area_events
        in: body
        name: Area_events
        required: true
        schema:
          $ref: '#/definitions/PostArea_events'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetArea_events'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /area_events
      tags:
      - Area_events
  /area_events/action_definitions:
    get:
      description: Retrieve definitions of area actions and their parameters
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetArea_action_definitions'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /area_events/action_definitions
      tags:
      - Area_events
      - Action_definitions
  /area_events/action_definitions/{action_type}:
    get:
      description: Retrieve the details about the action. It displays the parameters
        of the action and the limits for the values among others
      parameters:
      - $ref: '#/parameters/language'
      - description: The action_type to search for
        in: path
        name: action_type
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetArea_action_definition'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /area_events/action_definitions/{action_type}
      tags:
      - Area_events
      - Action_definitions
  /area_events/definitions:
    get:
      description: Retrieve definitions of areas and their actions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetArea_events_definitions'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /area_events/definitions
      tags:
      - Area_events
      - Definitions
  /area_events/{guid}:
    delete:
      description: Erase the area event with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /area_events/{guid}
      tags:
      - Area_events
    get:
      description: Retrieve the details about the area event with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetArea_event'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /area_events/{guid}
      tags:
      - Area_events
    put:
      description: Modify the values of the area event with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the area_event
        in: body
        name: Area_event
        required: true
        schema:
          $ref: '#/definitions/PutArea_event'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetArea_event'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /area_events/{guid}
      tags:
      - Area_events
  /area_events/{guid}/blocked:
    put:
      description: Block or unblock entry for a Limit-robots zone. While blocked robots
        are not allowed to enter the zone no matter the specified limit.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the block_area
        in: body
        name: Block_area
        required: true
        schema:
          $ref: '#/definitions/PutBlock_area'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetBlock_area'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /area_events/{guid}/blocked
      tags:
      - Area_events
      - Blocked
  /cart_calibrations:
    get:
      description: Retrieve the list of cart calibrations
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetCart_calibrations'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /cart_calibrations
      tags:
      - Cart_calibrations
    post:
      description: Add a new cart calibration
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the cart_calibrations
        in: body
        name: Cart_calibrations
        required: true
        schema:
          $ref: '#/definitions/PostCart_calibrations'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetCart_calibrations'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /cart_calibrations
      tags:
      - Cart_calibrations
  /cart_calibrations/{guid}:
    delete:
      description: Erase the cart calibration with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /cart_calibrations/{guid}
      tags:
      - Cart_calibrations
    get:
      description: Retrieve the details about the cart calibration with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCart_calibration'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /cart_calibrations/{guid}
      tags:
      - Cart_calibrations
    put:
      description: Modify the values of the cart calibration with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the cart_calibration
        in: body
        name: Cart_calibration
        required: true
        schema:
          $ref: '#/definitions/PutCart_calibration'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetCart_calibration'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /cart_calibrations/{guid}
      tags:
      - Cart_calibrations
  /cart_types:
    get:
      description: Retrieve the list of cart types
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetCart_types'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /cart_types
      tags:
      - Cart_types
    post:
      description: Add a new cart type
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the cart_types
        in: body
        name: Cart_types
        required: true
        schema:
          $ref: '#/definitions/PostCart_types'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetCart_types'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /cart_types
      tags:
      - Cart_types
  /cart_types/{guid}:
    delete:
      description: Erase the cart type with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /cart_types/{guid}
      tags:
      - Cart_types
    get:
      description: Retrieve the details about the cart type with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCart_type'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /cart_types/{guid}
      tags:
      - Cart_types
    put:
      description: Modify the values of the cart type with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the cart_type
        in: body
        name: Cart_type
        required: true
        schema:
          $ref: '#/definitions/PutCart_type'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetCart_type'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /cart_types/{guid}
      tags:
      - Cart_types
  /carts:
    get:
      description: Retrieve the list of carts
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetCarts'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /carts
      tags:
      - Carts
    post:
      description: Add a new cart
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the carts
        in: body
        name: Carts
        required: true
        schema:
          $ref: '#/definitions/PostCarts'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetCarts'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /carts
      tags:
      - Carts
  /carts/{guid}:
    delete:
      description: Erase the cart with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /carts/{guid}
      tags:
      - Carts
    get:
      description: Retrieve the details about the cart with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCart'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /carts/{guid}
      tags:
      - Carts
    put:
      description: Modify the values of the cart with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the cart
        in: body
        name: Cart
        required: true
        schema:
          $ref: '#/definitions/PutCart'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetCart'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /carts/{guid}
      tags:
      - Carts
  /chargers/{charger_id}/charging_groups:
    get:
      description: Retrieve list of charging groups associated with the charger with
        the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The charger_id to search for
        in: path
        name: charger_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCharger_charging_groups'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /chargers/{charger_id}/charging_groups
      tags:
      - Chargers
      - Charging_groups
  /charging_groups:
    get:
      description: Retrieve the list of charging groups in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetCharging_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups
      tags:
      - Charging_groups
    post:
      description: Add new charging group to the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the charging_groups
        in: body
        name: Charging_groups
        required: true
        schema:
          $ref: '#/definitions/PostCharging_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetCharging_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /charging_groups
      tags:
      - Charging_groups
  /charging_groups/{group_id}/chargers:
    get:
      description: Retrieve the list of chargers associated with the charging group
        with the specified charging group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetChargers'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups/{group_id}/chargers
      tags:
      - Charging_groups
      - Chargers
    post:
      description: Add new charger to the charging group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to add the new resource to
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The details of the chargers
        in: body
        name: Chargers
        required: true
        schema:
          $ref: '#/definitions/PostChargers'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetChargers'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /charging_groups/{group_id}/chargers
      tags:
      - Charging_groups
      - Chargers
  /charging_groups/{group_id}/chargers/{charger_id}:
    delete:
      description: Delete the charger with the specified charger GUID from the charging
        group with the specified charging group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to delete
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The charger_id to delete
        in: path
        name: charger_id
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /charging_groups/{group_id}/chargers/{charger_id}
      tags:
      - Charging_groups
      - Chargers
    get:
      description: Retrieve the details about the charger with the specified charger
        GUID associated with the charging group with the specified charging group
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The charger_id to search for
        in: path
        name: charger_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCharger'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups/{group_id}/chargers/{charger_id}
      tags:
      - Charging_groups
      - Chargers
  /charging_groups/{group_id}/robots:
    get:
      description: Retrieve the list of robots associated with the charging group
        with the specified charging group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetRobot_charging_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups/{group_id}/robots
      tags:
      - Charging_groups
      - Robots
    post:
      description: Add new robot to the charging group with the specified charging
        group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to add the new resource to
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The details of the robot_charging_groups
        in: body
        name: Robot_charging_groups
        required: true
        schema:
          $ref: '#/definitions/PostRobot_charging_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetRobot_charging_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /charging_groups/{group_id}/robots
      tags:
      - Charging_groups
      - Robots
  /charging_groups/{group_id}/robots/{robot_id}:
    delete:
      description: Delete the robot with the specified ID from the charging group
        with the specified charging group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to delete
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The robot_id to delete
        format: int32
        in: path
        name: robot_id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /charging_groups/{group_id}/robots/{robot_id}
      tags:
      - Charging_groups
      - Robots
    get:
      description: Retrieve the details about the robot with the specified ID associated
        with the charging group with the specified charging group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The robot_id to search for
        format: int32
        in: path
        name: robot_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot_charging_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups/{group_id}/robots/{robot_id}
      tags:
      - Charging_groups
      - Robots
  /charging_groups/{id}:
    delete:
      description: Delete the charging group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /charging_groups/{id}
      tags:
      - Charging_groups
    get:
      description: Retrieve the details about the charging group with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetCharging_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /charging_groups/{id}
      tags:
      - Charging_groups
    put:
      description: Modify the values of the charging group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the charging_group
        in: body
        name: Charging_group
        required: true
        schema:
          $ref: '#/definitions/PutCharging_group'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetCharging_group'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /charging_groups/{id}
      tags:
      - Charging_groups
  /dashboards:
    get:
      description: Retrieve the list of dashboards
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetDashboards'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /dashboards
      tags:
      - Dashboards
    post:
      description: Add a new dashboard
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the dashboards
        in: body
        name: Dashboards
        required: true
        schema:
          $ref: '#/definitions/PostDashboards'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetDashboards'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /dashboards
      tags:
      - Dashboards
  /dashboards/{dashboard_id}/widgets:
    get:
      description: Retrieve the list of widgets of the dashboard with the specified
        dashboard ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The dashboard_id to search for
        in: path
        name: dashboard_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetDashboard_widgets'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /dashboards/{dashboard_id}/widgets
      tags:
      - Dashboards
      - Widgets
    post:
      description: Add a new widget to the dashboard with the specified dashboard
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The dashboard_id to add the new resource to
        in: path
        name: dashboard_id
        required: true
        type: string
      - description: The details of the dashboard_widgets
        in: body
        name: Dashboard_widgets
        required: true
        schema:
          $ref: '#/definitions/PostDashboard_widgets'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetDashboard_widgets'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /dashboards/{dashboard_id}/widgets
      tags:
      - Dashboards
      - Widgets
  /dashboards/{dashboard_id}/widgets/{guid}:
    delete:
      description: Erase the widget with the specified GUID from the dashboard with
        the specified dashboard ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The dashboard_id to delete
        in: path
        name: dashboard_id
        required: true
        type: string
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /dashboards/{dashboard_id}/widgets/{guid}
      tags:
      - Dashboards
      - Widgets
    get:
      description: Retrieve the details about the widget with the specified GUID in
        the dashboard with the specified dashboard ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The dashboard_id to search for
        in: path
        name: dashboard_id
        required: true
        type: string
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetDashboard_widget'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /dashboards/{dashboard_id}/widgets/{guid}
      tags:
      - Dashboards
      - Widgets
    put:
      description: Modify the values of the widget with the specified GUID in the
        dashboard with the specified dashboard ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The dashboard_id to modify
        in: path
        name: dashboard_id
        required: true
        type: string
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the dashboard_widget
        in: body
        name: Dashboard_widget
        required: true
        schema:
          $ref: '#/definitions/PutDashboard_widget'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetDashboard_widget'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /dashboards/{dashboard_id}/widgets/{guid}
      tags:
      - Dashboards
      - Widgets
  /dashboards/{guid}:
    delete:
      description: Erase the dashboard with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /dashboards/{guid}
      tags:
      - Dashboards
    get:
      description: Retrieve the details of the dashboard with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetDashboard'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /dashboards/{guid}
      tags:
      - Dashboards
    put:
      description: Modify the values of the dashboard with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the dashboard
        in: body
        name: Dashboard
        required: true
        schema:
          $ref: '#/definitions/PutDashboard'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetDashboard'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /dashboards/{guid}
      tags:
      - Dashboards
  /docking_offsets:
    get:
      description: Retrieve the list of docking offsets
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetDocking_offsets'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /docking_offsets
      tags:
      - Docking_offsets
    post:
      description: Add a new docking offset. The only positions that can have docking
        offsets are Charging stations, V markers and VL markers
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the docking_offsets
        in: body
        name: Docking_offsets
        required: true
        schema:
          $ref: '#/definitions/PostDocking_offsets'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetDocking_offsets'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /docking_offsets
      tags:
      - Docking_offsets
  /docking_offsets/shelfs:
    get:
      description: Retrieve the list of docking offsets
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetDocking_offsets_no_pos'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /docking_offsets/shelfs
      tags:
      - Docking_offsets
      - Shelfs
  /docking_offsets/types:
    get:
      description: Retrieve a list of possible position types
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetDocking_offset_types'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /docking_offsets/types
      tags:
      - Docking_offsets
      - Types
  /docking_offsets/types/{id}:
    get:
      description: Retrieve the details about the position type with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetDocking_offset_type'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /docking_offsets/types/{id}
      tags:
      - Docking_offsets
      - Types
  /docking_offsets/{guid}:
    delete:
      description: Erase the docking offset with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /docking_offsets/{guid}
      tags:
      - Docking_offsets
    get:
      description: Retrieve the details of the docking offset with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetDocking_offset'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /docking_offsets/{guid}
      tags:
      - Docking_offsets
    put:
      description: Modify the values of the docking offset with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the docking_offset
        in: body
        name: Docking_offset
        required: true
        schema:
          $ref: '#/definitions/PutDocking_offset'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetDocking_offset'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /docking_offsets/{guid}
      tags:
      - Docking_offsets
  /elevator_floors:
    get:
      description: Retrieve the list of elevator floors in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevator_floors'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_floors
      tags:
      - Elevator_floors
    post:
      description: Add a new elevator floor to the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the elevator_floors
        in: body
        name: Elevator_floors
        required: true
        schema:
          $ref: '#/definitions/PostElevator_floors'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_floors'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevator_floors
      tags:
      - Elevator_floors
  /elevator_floors/{guid}:
    delete:
      description: Delete the specified elevator floor
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /elevator_floors/{guid}
      tags:
      - Elevator_floors
    get:
      description: Retrieve the details about the specified elevator floor
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator_floor'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_floors/{guid}
      tags:
      - Elevator_floors
    put:
      description: Modify the values of the specified elevator floor
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the elevator_floor
        in: body
        name: Elevator_floor
        required: true
        schema:
          $ref: '#/definitions/PutElevator_floor'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetElevator_floor'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /elevator_floors/{guid}
      tags:
      - Elevator_floors
  /elevator_groups:
    get:
      description: Retrieve the list of elevator groups in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevator_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_groups
      tags:
      - Elevator_groups
    post:
      description: Add new elevator group to the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the elevator_groups
        in: body
        name: Elevator_groups
        required: true
        schema:
          $ref: '#/definitions/PostElevator_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevator_groups
      tags:
      - Elevator_groups
  /elevator_groups/{group_id}/elevators:
    get:
      description: Retrieve the list of elevators associated with the elevator group
        with the specified elevator group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevator_group_rel_elevator'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_groups/{group_id}/elevators
      tags:
      - Elevator_groups
      - Elevators
    post:
      description: Add new elevator to the elevator group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to add the new resource to
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The details of the elevator_group_rel_elevator
        in: body
        name: Elevator_group_rel_elevator
        required: true
        schema:
          $ref: '#/definitions/PostElevator_group_rel_elevator'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_group_rel_elevator'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevator_groups/{group_id}/elevators
      tags:
      - Elevator_groups
      - Elevators
  /elevator_groups/{group_id}/elevators/{elevator_guid}:
    delete:
      description: Delete the elevator with the specified guid from the elevator group
        with the specified elevator group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to delete
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The elevator_guid to delete
        in: path
        name: elevator_guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /elevator_groups/{group_id}/elevators/{elevator_guid}
      tags:
      - Elevator_groups
      - Elevators
  /elevator_groups/{group_id}/robots:
    get:
      description: Retrieve the list of robots associated with the elevator group
        with the specified elevator group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevator_group_rel_robot'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_groups/{group_id}/robots
      tags:
      - Elevator_groups
      - Robots
    post:
      description: Add new robot to the elevator group with the specified elevator
        group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to add the new resource to
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The details of the elevator_group_rel_robot
        in: body
        name: Elevator_group_rel_robot
        required: true
        schema:
          $ref: '#/definitions/PostElevator_group_rel_robot'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_group_rel_robot'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevator_groups/{group_id}/robots
      tags:
      - Elevator_groups
      - Robots
  /elevator_groups/{group_id}/robots/{robot_id}:
    delete:
      description: Delete the robot with the specified ID from the elevator group
        with the specified elevator group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to delete
        format: int32
        in: path
        name: group_id
        required: true
        type: integer
      - description: The robot_id to delete
        format: int32
        in: path
        name: robot_id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /elevator_groups/{group_id}/robots/{robot_id}
      tags:
      - Elevator_groups
      - Robots
  /elevator_groups/{id}:
    delete:
      description: Delete the elevator group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /elevator_groups/{id}
      tags:
      - Elevator_groups
    get:
      description: Retrieve the details about the elevator group with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_groups/{id}
      tags:
      - Elevator_groups
    put:
      description: Modify the values of the elevator group with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the elevator_group
        in: body
        name: Elevator_group
        required: true
        schema:
          $ref: '#/definitions/PutElevator_group'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetElevator_group'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /elevator_groups/{id}
      tags:
      - Elevator_groups
  /elevator_status:
    get:
      description: Retrieve run-time info from all elevators on the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevator_statuses'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_status
      tags:
      - Elevator_status
  /elevator_status/{guid}:
    get:
      description: Retrieve run-time info from elevator with specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator_status'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevator_status/{guid}
      tags:
      - Elevator_status
  /elevators:
    get:
      description: Retrieve a list of elevators in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetElevators'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevators
      tags:
      - Elevators
    post:
      description: Add a new elevator to the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the elevators
        in: body
        name: Elevators
        required: true
        schema:
          $ref: '#/definitions/PostElevators'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevators'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevators
      tags:
      - Elevators
  /elevators/{guid}:
    delete:
      description: Delete the elevator with the specified guid
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /elevators/{guid}
      tags:
      - Elevators
    get:
      description: Retrieve the details about the elevator with the specified guid
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevators/{guid}
      tags:
      - Elevators
    put:
      description: Modify the values of the elevator with the specified guid
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the elevator
        in: body
        name: Elevator
        required: true
        schema:
          $ref: '#/definitions/PutElevator'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetElevator'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /elevators/{guid}
      tags:
      - Elevators
  /elevators/{guid}/cmd_check_server:
    get:
      description: Check if the server provides expected methods and variables.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator_cmd_check_server'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevators/{guid}/cmd_check_server
      tags:
      - Elevators
      - Cmd_check_server
  /elevators/{guid}/cmd_control:
    post:
      description: Request a control of the elevator.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to add the new resource to
        in: path
        name: guid
        required: true
        type: string
      - description: The details of the elevator_cmd_control
        in: body
        name: Elevator_cmd_control
        required: true
        schema:
          $ref: '#/definitions/PostElevator_cmd_control'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_cmd_control'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevators/{guid}/cmd_control
      tags:
      - Elevators
      - Cmd_control
  /elevators/{guid}/cmd_door:
    post:
      description: Request the elevator to open a door.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to add the new resource to
        in: path
        name: guid
        required: true
        type: string
      - description: The details of the elevator_cmd_door
        in: body
        name: Elevator_cmd_door
        required: true
        schema:
          $ref: '#/definitions/PostElevator_cmd_door'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_cmd_door'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevators/{guid}/cmd_door
      tags:
      - Elevators
      - Cmd_door
  /elevators/{guid}/cmd_floor:
    post:
      description: Request the elevator to go the a floor and open the door.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to add the new resource to
        in: path
        name: guid
        required: true
        type: string
      - description: The details of the elevator_cmd_floor
        in: body
        name: Elevator_cmd_floor
        required: true
        schema:
          $ref: '#/definitions/PostElevator_cmd_floor'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetElevator_cmd_floor'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /elevators/{guid}/cmd_floor
      tags:
      - Elevators
      - Cmd_floor
  /elevators/{guid}/opcua_scanner:
    get:
      description: Retrieve the list of available namespaces on specified Opc UA server
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetElevator_opcua_scanner'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /elevators/{guid}/opcua_scanner
      tags:
      - Elevators
      - Opcua_scanner
  /evacuations:
    get:
      description: Retrieve evacuation state
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetEvacuations'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /evacuations
      tags:
      - Evacuations
    post:
      description: Set evactuation state
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the evacuations
        in: body
        name: Evacuations
        required: true
        schema:
          $ref: '#/definitions/PostEvacuations'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetEvacuations'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /evacuations
      tags:
      - Evacuations
  /evacuations/{id}:
    get:
      description: Retrieve a specific evacuation activation
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetEvacuation'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /evacuations/{id}
      tags:
      - Evacuations
  /factory_reset:
    post:
      description: Clean and migrate the database. Keep hardware configurations
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the factory_reset_from_fleet
        in: body
        name: Factory_reset_from_fleet
        required: true
        schema:
          $ref: '#/definitions/PostFactory_reset_from_fleet'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetFactory_reset_from_fleet'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /factory_reset
      tags:
      - Factory_reset
  /fire_alarms:
    get:
      description: 'Deprecated, use /evacuations endpoint instead : Retrieve list
        of fire alarms'
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetFire_alarms'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /fire_alarms
      tags:
      - Fire_alarms
  /fire_alarms/{id}:
    get:
      description: 'Deprecated, use /evacuations endpoint instead : Retrieve details
        about the fire alarm with the specified ID'
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetFire_alarm'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /fire_alarms/{id}
      tags:
      - Fire_alarms
    put:
      description: 'Deprecated, use /evacuations endpoint instead : Modify the values
        of the fire alarm with the specified ID'
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the fire_alarm
        in: body
        name: Fire_alarm
        required: true
        schema:
          $ref: '#/definitions/PutFire_alarm'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetFire_alarm'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /fire_alarms/{id}
      tags:
      - Fire_alarms
  /footprints:
    get:
      description: Retrieve a list of footprints currently stored
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetFootprints'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /footprints
      tags:
      - Footprints
    post:
      description: Add new footprint to the database
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the footprints
        in: body
        name: Footprints
        required: true
        schema:
          $ref: '#/definitions/PostFootprints'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetFootprints'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /footprints
      tags:
      - Footprints
  /footprints/{guid}:
    delete:
      description: Delete with a specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /footprints/{guid}
      tags:
      - Footprints
    get:
      description: Retrieve information about a footprint with specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetFootprint'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /footprints/{guid}
      tags:
      - Footprints
    put:
      description: Modify a footprint with a specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the footprint
        in: body
        name: Footprint
        required: true
        schema:
          $ref: '#/definitions/PutFootprint'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetFootprint'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /footprints/{guid}
      tags:
      - Footprints
  /log/error_reports:
    delete:
      description: Erase ALL the error reports
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /log/error_reports
      tags:
      - Log
      - Error_reports
    get:
      description: Retrieve the list of error reports
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetError_reports'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /log/error_reports
      tags:
      - Log
      - Error_reports
    post:
      description: Generate a new error report. This will record the 30s previous
        to this call in a file.
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the error_reports
        in: body
        name: Error_reports
        required: true
        schema:
          $ref: '#/definitions/PostError_reports'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetError_reports'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /log/error_reports
      tags:
      - Log
      - Error_reports
  /log/error_reports/{id}:
    delete:
      description: Erase the error report with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /log/error_reports/{id}
      tags:
      - Log
      - Error_reports
    get:
      description: Retrieve the details about the error report with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetError_report'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /log/error_reports/{id}
      tags:
      - Log
      - Error_reports
  /log/error_reports/{id}/download:
    get:
      description: Download the file containing the error report with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetError_report_download'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /log/error_reports/{id}/download
      tags:
      - Log
      - Error_reports
      - Download
  /maps:
    get:
      description: Retrieve the list of maps
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMaps'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps
      tags:
      - Maps
    post:
      description: Add a new map
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the maps
        in: body
        name: Maps
        required: true
        schema:
          $ref: '#/definitions/PostMaps'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetMaps'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /maps
      tags:
      - Maps
  /maps/{guid}:
    delete:
      description: Erase the map with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /maps/{guid}
      tags:
      - Maps
    get:
      description: Retrieve the details about the map with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMap'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps/{guid}
      tags:
      - Maps
    put:
      description: Modify the values of the map with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the map
        in: body
        name: Map
        required: true
        schema:
          $ref: '#/definitions/PutMap'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMap'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /maps/{guid}
      tags:
      - Maps
  /maps/{map_id}/area_events:
    get:
      description: Retrieve the list of area events that belong to the map with the
        specified map ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The map_id to search for
        in: path
        name: map_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMap_area_event'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps/{map_id}/area_events
      tags:
      - Maps
      - Area_events
  /maps/{map_id}/path_guides:
    get:
      description: Retrieve the list of path guides that belong to the map with the
        specified map ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The map_id to search for
        in: path
        name: map_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMap_path_guides'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps/{map_id}/path_guides
      tags:
      - Maps
      - Path_guides
  /maps/{map_id}/paths:
    get:
      description: Retrieve the list of paths that belong to the map with the specified
        map ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The map_id to search for
        in: path
        name: map_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMap_paths'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps/{map_id}/paths
      tags:
      - Maps
      - Paths
  /maps/{map_id}/positions:
    get:
      description: Retrieve the list of positions that belong to the map with the
        specified map ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The map_id to search for
        in: path
        name: map_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMap_positions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /maps/{map_id}/positions
      tags:
      - Maps
      - Positions
  /metrics:
    get:
      description: 'Retrieve the latests MiR metrics related to the given MiR product
        in the Prometheus or OpenMetrics text format. Default: OpenMetrics.'
      parameters:
      - $ref: '#/parameters/language'
      - description: The response content types accepted by the client
        in: header
        items:
          default: application/openmetrics-text
          enum:
          - text/plain
          - application/openmetrics-text
          type: string
        name: Accept
        required: false
        type: array
      produces:
      - text/plain
      - application/openmetrics-text
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMetrics'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /metrics
      tags:
      - Metrics
  /mission_groups:
    get:
      description: Retrieve the list of mission groups
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMission_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_groups
      tags:
      - Mission_groups
    post:
      description: Add a new mission group
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the mission_groups
        in: body
        name: Mission_groups
        required: true
        schema:
          $ref: '#/definitions/PostMission_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetMission_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /mission_groups
      tags:
      - Mission_groups
  /mission_groups/{group_id}/missions:
    get:
      description: Retrieve the list of missions that belong to the group with the
        specified group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The group_id to search for
        in: path
        name: group_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetGroup_missions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_groups/{group_id}/missions
      tags:
      - Mission_groups
      - Missions
  /mission_groups/{guid}:
    delete:
      description: Erase the mission group with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /mission_groups/{guid}
      tags:
      - Mission_groups
    get:
      description: Retrieve the details about the mission group with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMission_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_groups/{guid}
      tags:
      - Mission_groups
    put:
      description: Modify the values of the mission group with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the mission_group
        in: body
        name: Mission_group
        required: true
        schema:
          $ref: '#/definitions/PutMission_group'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMission_group'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /mission_groups/{guid}
      tags:
      - Mission_groups
  /mission_groups/{mission_group_id}/actions:
    get:
      description: Retrieve the list of action definitions from the mission group
        with the specified mission group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_group_id to search for
        in: path
        name: mission_group_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetGroup_action_definition'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_groups/{mission_group_id}/actions
      tags:
      - Mission_groups
      - Actions
  /mission_scheduler:
    delete:
      description: Abort all pending missions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /mission_scheduler
      tags:
      - Mission_scheduler
    get:
      description: Retrieve the list of missions queued in the mission scheduler
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMission_schedulers'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_scheduler
      tags:
      - Mission_scheduler
    post:
      description: Add a new entry in the mission scheduler
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the mission_schedulers
        in: body
        name: Mission_schedulers
        required: true
        schema:
          $ref: '#/definitions/PostMission_schedulers'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetMission_schedulers'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /mission_scheduler
      tags:
      - Mission_scheduler
  /mission_scheduler/{id}:
    delete:
      description: Abort the mission schedule with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /mission_scheduler/{id}
      tags:
      - Mission_scheduler
    get:
      description: Retrieve the details about the mission scheduler with the specified
        id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMission_scheduler'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /mission_scheduler/{id}
      tags:
      - Mission_scheduler
    put:
      description: Modify the values of the mission scheduler with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the mission_scheduler
        in: body
        name: Mission_scheduler
        required: true
        schema:
          $ref: '#/definitions/PutMission_scheduler'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMission_scheduler'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /mission_scheduler/{id}
      tags:
      - Mission_scheduler
  /missions:
    get:
      description: Retrieve the list of missions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMissions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions
      tags:
      - Missions
    post:
      description: Add a new mission
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the missions
        in: body
        name: Missions
        required: true
        schema:
          $ref: '#/definitions/PostMissions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetMissions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /missions
      tags:
      - Missions
  /missions/{guid}:
    delete:
      description: Erase the mission with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /missions/{guid}
      tags:
      - Missions
    get:
      description: Retrieve the details about the mission with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMission'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions/{guid}
      tags:
      - Missions
    put:
      description: Modify the values of the mission with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the mission
        in: body
        name: Mission
        required: true
        schema:
          $ref: '#/definitions/PutMission'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMission'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /missions/{guid}
      tags:
      - Missions
  /missions/{guid}/definition:
    get:
      description: Retrieve the mission with the specified GUID as an action definition
        that can be inserted in another mission
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMission_definition'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions/{guid}/definition
      tags:
      - Missions
      - Definition
  /missions/{guid}/qualified_robots:
    get:
      description: Lists the qualified robots for this mission
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetQualified_robots'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions/{guid}/qualified_robots
      tags:
      - Missions
      - Qualified_robots
  /missions/{mission_id}/actions:
    get:
      description: Retrieve the list of actions that belong to the mission with the
        specified mission ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_id to search for
        in: path
        name: mission_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMission_actions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions/{mission_id}/actions
      tags:
      - Missions
      - Actions
    post:
      description: Add a new action to the mission with the specified mission ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_id to add the new resource to
        in: path
        name: mission_id
        required: true
        type: string
      - description: The details of the mission_actions
        in: body
        name: Mission_actions
        required: true
        schema:
          $ref: '#/definitions/PostMission_actions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetMission_actions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /missions/{mission_id}/actions
      tags:
      - Missions
      - Actions
  /missions/{mission_id}/actions/{guid}:
    delete:
      description: Erase the action with the specified GUID from the mission with
        the specified mission ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_id to delete
        in: path
        name: mission_id
        required: true
        type: string
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /missions/{mission_id}/actions/{guid}
      tags:
      - Missions
      - Actions
    get:
      description: Retrieve the details about the action with the specified GUID that
        belongs to the mission with the specified mission ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_id to search for
        in: path
        name: mission_id
        required: true
        type: string
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetMission_action'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /missions/{mission_id}/actions/{guid}
      tags:
      - Missions
      - Actions
    put:
      description: Modify the values of the action with the specified GUID that belongs
        to the mission with the specified mission ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The mission_id to modify
        in: path
        name: mission_id
        required: true
        type: string
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the mission_action
        in: body
        name: Mission_action
        required: true
        schema:
          $ref: '#/definitions/PutMission_action'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMission_action'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /missions/{mission_id}/actions/{guid}
      tags:
      - Missions
      - Actions
  /path_guides:
    get:
      description: Retrieve the list of path guides
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPath_guides'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides
      tags:
      - Path_guides
    post:
      description: Add a new path guide
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the path_guides
        in: body
        name: Path_guides
        required: true
        schema:
          $ref: '#/definitions/PostPath_guides'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPath_guides'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /path_guides
      tags:
      - Path_guides
  /path_guides/{guid}:
    delete:
      description: Erase the path guide with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /path_guides/{guid}
      tags:
      - Path_guides
    get:
      description: Retrieve the path guide with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath_guide'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides/{guid}
      tags:
      - Path_guides
    put:
      description: Modify the values of the path guide with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the path_guide
        in: body
        name: Path_guide
        required: true
        schema:
          $ref: '#/definitions/PutPath_guide'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPath_guide'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /path_guides/{guid}
      tags:
      - Path_guides
  /path_guides/{path_guide_guid}/options:
    get:
      description: Retrieve the list of allowed start/via/goal options for the selected
        path guide
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to search for
        in: path
        name: path_guide_guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath_guide_options'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides/{path_guide_guid}/options
      tags:
      - Path_guides
      - Options
  /path_guides/{path_guide_guid}/positions:
    get:
      description: Retrieve the list of positions for the path guide with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to search for
        in: path
        name: path_guide_guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPath_guide_positions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides/{path_guide_guid}/positions
      tags:
      - Path_guides
      - Positions
    post:
      description: Add a new position to the path guide with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to add the new resource to
        in: path
        name: path_guide_guid
        required: true
        type: string
      - description: The details of the path_guide_positions
        in: body
        name: Path_guide_positions
        required: true
        schema:
          $ref: '#/definitions/PostPath_guide_positions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPath_guide_positions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /path_guides/{path_guide_guid}/positions
      tags:
      - Path_guides
      - Positions
  /path_guides/{path_guide_guid}/positions/{guid}:
    delete:
      description: Erase the position with the specified GUID from the path guide
        with the specified path guide GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to delete
        in: path
        name: path_guide_guid
        required: true
        type: string
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /path_guides/{path_guide_guid}/positions/{guid}
      tags:
      - Path_guides
      - Positions
    get:
      description: Retrieve the position with the specified GUID from the path guide
        with the specified path guide GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to search for
        in: path
        name: path_guide_guid
        required: true
        type: string
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath_guide_position'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides/{path_guide_guid}/positions/{guid}
      tags:
      - Path_guides
      - Positions
    put:
      description: Modify the values of the position with the specified GUID from
        the path guide with the specified path guide GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The path_guide_guid to modify
        in: path
        name: path_guide_guid
        required: true
        type: string
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the path_guide_position
        in: body
        name: Path_guide_position
        required: true
        schema:
          $ref: '#/definitions/PutPath_guide_position'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPath_guide_position'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /path_guides/{path_guide_guid}/positions/{guid}
      tags:
      - Path_guides
      - Positions
  /path_guides_positions:
    get:
      description: Retrieve the list of positions used for path guides
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPath_guides_positions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides_positions
      tags:
      - Path_guides_positions
    post:
      description: Add a new position in a path guide
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the path_guides_positions
        in: body
        name: Path_guides_positions
        required: true
        schema:
          $ref: '#/definitions/PostPath_guides_positions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPath_guides_positions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /path_guides_positions
      tags:
      - Path_guides_positions
  /path_guides_positions/{guid}:
    delete:
      description: Erase the path guide position with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /path_guides_positions/{guid}
      tags:
      - Path_guides_positions
    get:
      description: Retrieve the position for path guides with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath_guides_position'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides_positions/{guid}
      tags:
      - Path_guides_positions
    put:
      description: Modify the values of the position for path guides with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the path_guides_position
        in: body
        name: Path_guides_position
        required: true
        schema:
          $ref: '#/definitions/PutPath_guides_position'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPath_guides_position'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /path_guides_positions/{guid}
      tags:
      - Path_guides_positions
  /path_guides_precalc:
    get:
      description: Retrieve the status of path guides precalculation
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath_guides_precalc'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /path_guides_precalc
      tags:
      - Path_guides_precalc
    post:
      description: Start/stop precalculation of the specified path guide
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the path_guides_precalc
        in: body
        name: Path_guides_precalc
        required: true
        schema:
          $ref: '#/definitions/PostPath_guides_precalc'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPath_guides_precalc'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /path_guides_precalc
      tags:
      - Path_guides_precalc
  /paths:
    get:
      description: Retrieve the list of paths
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPaths'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /paths
      tags:
      - Paths
    post:
      description: Add a new path
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the paths
        in: body
        name: Paths
        required: true
        schema:
          $ref: '#/definitions/PostPaths'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPaths'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /paths
      tags:
      - Paths
  /paths/{guid}:
    delete:
      description: Erase the path with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /paths/{guid}
      tags:
      - Paths
    get:
      description: Retrieve the path with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPath'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /paths/{guid}
      tags:
      - Paths
    put:
      description: Modify the values of the path with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the path
        in: body
        name: Path
        required: true
        schema:
          $ref: '#/definitions/PutPath'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPath'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /paths/{guid}
      tags:
      - Paths
  /permissions:
    get:
      description: TODO
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPermissions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /permissions
      tags:
      - Permissions
    post:
      description: TODO
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the permissions
        in: body
        name: Permissions
        required: true
        schema:
          $ref: '#/definitions/PostPermissions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPermissions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /permissions
      tags:
      - Permissions
  /permissions/{guid}:
    delete:
      description: Erase the permission with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /permissions/{guid}
      tags:
      - Permissions
    get:
      description: Retrieve the details about the permission with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPermission'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /permissions/{guid}
      tags:
      - Permissions
  /position_transition_lists:
    get:
      description: Retrieve the list of position transition lists
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPosition_transition_lists'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /position_transition_lists
      tags:
      - Position_transition_lists
    post:
      description: Add a new position transition list
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the position_transition_lists
        in: body
        name: Position_transition_lists
        required: true
        schema:
          $ref: '#/definitions/PostPosition_transition_lists'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPosition_transition_lists'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /position_transition_lists
      tags:
      - Position_transition_lists
  /position_transition_lists/{guid}:
    delete:
      description: Erase the position transition list with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /position_transition_lists/{guid}
      tags:
      - Position_transition_lists
    get:
      description: Retrieve the details about the position transition list with the
        specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPosition_transition_list'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /position_transition_lists/{guid}
      tags:
      - Position_transition_lists
    put:
      description: Modify the values of the position transition list with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the position_transition_list
        in: body
        name: Position_transition_list
        required: true
        schema:
          $ref: '#/definitions/PutPosition_transition_list'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPosition_transition_list'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /position_transition_lists/{guid}
      tags:
      - Position_transition_lists
  /position_types:
    get:
      description: Retrieve a list of possible position types
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPosition_types'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /position_types
      tags:
      - Position_types
  /position_types/{id}:
    get:
      description: Retrieve the details about the position type with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPosition_type'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /position_types/{id}
      tags:
      - Position_types
  /positions:
    get:
      description: Retrieve the list of positions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPositions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /positions
      tags:
      - Positions
    post:
      description: Add a new position
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the positions
        in: body
        name: Positions
        required: true
        schema:
          $ref: '#/definitions/PostPositions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetPositions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /positions
      tags:
      - Positions
  /positions/{guid}:
    delete:
      description: Erase the position with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /positions/{guid}
      tags:
      - Positions
    get:
      description: Retrieve the details about the position with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPosition'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /positions/{guid}
      tags:
      - Positions
    put:
      description: Modify the values of the position with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the position
        in: body
        name: Position
        required: true
        schema:
          $ref: '#/definitions/PutPosition'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPosition'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /positions/{guid}
      tags:
      - Positions
  /positions/{parent_guid}/helper_positions:
    get:
      description: Retrieve the list of helper positions for the position with the
        specified parent GUID. Only Charging Stations, V markers, VL markers, Shelf
        and Trolley positions have helper positions
      parameters:
      - $ref: '#/parameters/language'
      - description: The parent_guid to search for
        in: path
        name: parent_guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetHelper_positions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /positions/{parent_guid}/helper_positions
      tags:
      - Positions
      - Helper_positions
  /positions/{pos_id}/docking_offsets:
    get:
      description: Retrieve the details of the docking offset of the position with
        the specified position ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The pos_id to search for
        in: path
        name: pos_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetPos_docking_offsets'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /positions/{pos_id}/docking_offsets
      tags:
      - Positions
      - Docking_offsets
  /prompt:
    get:
      description: Get the list of active user prompts for robots that are active
        on the fleet.
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPrompt'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /prompt
      tags:
      - Prompt
  /prompt/{guid}:
    get:
      description: Get the details of a specific prompt by the GUID.
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPrompt_answer'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /prompt/{guid}
      tags:
      - Prompt
    put:
      description: Answer a prompt given by the GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the prompt_answer
        in: body
        name: Prompt_answer
        required: true
        schema:
          $ref: '#/definitions/PutPrompt_answer'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetPrompt_answer'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /prompt/{guid}
      tags:
      - Prompt
  /remote_support:
    get:
      description: Retrieve the status of the remote support connection
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRemote_support'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /remote_support
      tags:
      - Remote_support
    put:
      description: Modify the remote support connection timeout
      parameters:
      - $ref: '#/parameters/language'
      - description: The new values of the remote_support
        in: body
        name: Remote_support
        required: true
        schema:
          $ref: '#/definitions/PutRemote_support'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetRemote_support'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /remote_support
      tags:
      - Remote_support
  /remote_support/log:
    get:
      description: Retrieve the list with the actions performed by the remote support
        controller
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRemote_support_log'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /remote_support/log
      tags:
      - Remote_support
      - Log
  /reset:
    post:
      description: Initiate reset of the system
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetFleet_reset'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /reset
      tags:
      - Reset
  /resources/areas:
    get:
      description: Retrieve the list of area resources in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetResource_areas'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /resources/areas
      tags:
      - Resources
      - Areas
  /resources/areas/{guid}:
    get:
      description: Retrieve the details about the queue to the resource with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetResource_area'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /resources/areas/{guid}
      tags:
      - Resources
      - Areas
  /resources/positions:
    get:
      description: Retrieve the list of position resources in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetResource_positions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /resources/positions
      tags:
      - Resources
      - Positions
  /resources/positions/{guid}:
    get:
      description: Retrieve the details about the queue to the resource with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetResource_position'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /resources/positions/{guid}
      tags:
      - Resources
      - Positions
  /restart:
    post:
      description: Initiate restart of the system
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetFleet_restart'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /restart
      tags:
      - Restart
  /robot_groups:
    get:
      description: Retrieve the list of robot groups in the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetRobot_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robot_groups
      tags:
      - Robot_groups
    post:
      description: Add a new robot group to the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the robot_groups
        in: body
        name: Robot_groups
        required: true
        schema:
          $ref: '#/definitions/PostRobot_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetRobot_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /robot_groups
      tags:
      - Robot_groups
  /robot_groups/{id}:
    delete:
      description: Delete the robot group with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /robot_groups/{id}
      tags:
      - Robot_groups
    get:
      description: Retrieve the details about the robot group with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robot_groups/{id}
      tags:
      - Robot_groups
    put:
      description: Modify the values of the robot group with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the robot_group
        in: body
        name: Robot_group
        required: true
        schema:
          $ref: '#/definitions/PutRobot_group'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetRobot_group'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /robot_groups/{id}
      tags:
      - Robot_groups
  /robot_groups/{robot_group_id}/mission_groups:
    get:
      description: Get mission groups in robot group
      parameters:
      - $ref: '#/parameters/language'
      - description: The robot_group_id to search for
        format: int32
        in: path
        name: robot_group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot_group_mission_groups'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robot_groups/{robot_group_id}/mission_groups
      tags:
      - Robot_groups
      - Mission_groups
    post:
      description: Add mission groups in robot group
      parameters:
      - $ref: '#/parameters/language'
      - description: The robot_group_id to add the new resource to
        format: int32
        in: path
        name: robot_group_id
        required: true
        type: integer
      - description: The details of the robot_group_mission_groups
        in: body
        name: Robot_group_mission_groups
        required: true
        schema:
          $ref: '#/definitions/PostRobot_group_mission_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetRobot_group_mission_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /robot_groups/{robot_group_id}/mission_groups
      tags:
      - Robot_groups
      - Mission_groups
  /robot_groups/{robot_group_id}/mission_groups/{mission_group_id}:
    delete:
      description: Delete mission group in robot group
      parameters:
      - $ref: '#/parameters/language'
      - description: The robot_group_id to delete
        format: int32
        in: path
        name: robot_group_id
        required: true
        type: integer
      - description: The mission_group_id to delete
        in: path
        name: mission_group_id
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /robot_groups/{robot_group_id}/mission_groups/{mission_group_id}
      tags:
      - Robot_groups
      - Mission_groups
    get:
      description: Get mission group in robot group
      parameters:
      - $ref: '#/parameters/language'
      - description: The robot_group_id to search for
        format: int32
        in: path
        name: robot_group_id
        required: true
        type: integer
      - description: The mission_group_id to search for
        in: path
        name: mission_group_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot_group_mission_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robot_groups/{robot_group_id}/mission_groups/{mission_group_id}
      tags:
      - Robot_groups
      - Mission_groups
  /robots:
    get:
      description: Retrieve the list of robots
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            type: array
            items:
              $ref: '#/definitions/GetRobots'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robots
      tags:
      - Robots
    post:
      description: Add a new robot
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the robots
        in: body
        name: Robots
        required: true
        schema:
          $ref: '#/definitions/PostRobots'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetRobots'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /robots
      tags:
      - Robots
  /robots/scan:
    get:
      description: Scan for robots
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetRobots_scan'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robots/scan
      tags:
      - Robots
      - Scan
  /robots/scan/{ip}:
    get:
      description: Scan for robots on IP
      parameters:
      - $ref: '#/parameters/language'
      - description: The ip to search for
        in: path
        name: ip
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot_scan'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robots/scan/{ip}
      tags:
      - Robots
      - Scan
  /robots/{id}:
    delete:
      description: Delete the robot with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to delete
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /robots/{id}
      tags:
      - Robots
    get:
      description: Retrieve the details about the robot with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        format: int32
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetRobot'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robots/{id}
      tags:
      - Robots
    put:
      description: Modify the values of the robot with the specified id
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: The new values of the robot
        in: body
        name: Robot
        required: true
        schema:
          $ref: '#/definitions/PutRobot'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetRobot'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /robots/{id}
      tags:
      - Robots
  /robots/{robot_id}/charging_groups:
    get:
      description: Retrieve list of charging groups associated with the robot with
        the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The robot_id to search for
        format: int32
        in: path
        name: robot_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            type: array
            items:
              $ref: '#/definitions/GetRobots_charging_groups'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /robots/{robot_id}/charging_groups
      tags:
      - Robots
      - Charging_groups
  /service_book:
    get:
      description: Retrieve service book entries accessible by user
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetService_books'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /service_book
      tags:
      - Service_book
    post:
      description: Add a service book note
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the service_books
        in: body
        name: Service_books
        required: true
        schema:
          $ref: '#/definitions/PostService_books'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetService_books'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /service_book
      tags:
      - Service_book
  /service_book/{guid}:
    delete:
      description: Erase the note with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /service_book/{guid}
      tags:
      - Service_book
    get:
      description: Retrieve note with the GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetService_book'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /service_book/{guid}
      tags:
      - Service_book
  /sessions:
    get:
      description: Retrieve the list of sessions
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSessions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions
      tags:
      - Sessions
    post:
      description: Add a new session
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the sessions
        in: body
        name: Sessions
        required: true
        schema:
          $ref: '#/definitions/PostSessions'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSessions'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /sessions
      tags:
      - Sessions
  /sessions/import:
    delete:
      description: Cancel currently running import
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /sessions/import
      tags:
      - Sessions
      - Import
    get:
      description: Get progress of the running import
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSession_import'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/import
      tags:
      - Sessions
      - Import
    post:
      description: Import the session contained in the file
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the session_import
        in: body
        name: Session_import
        required: true
        schema:
          $ref: '#/definitions/PostSession_import'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSession_import'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /sessions/import
      tags:
      - Sessions
      - Import
  /sessions/{guid}:
    delete:
      description: Erase the session with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /sessions/{guid}
      tags:
      - Sessions
    get:
      description: Retrieve the details about the session with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSession'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{guid}
      tags:
      - Sessions
    put:
      description: Modify the values of the session with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the session
        in: body
        name: Session
        required: true
        schema:
          $ref: '#/definitions/PutSession'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetSession'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /sessions/{guid}
      tags:
      - Sessions
  /sessions/{guid}/export:
    get:
      description: Download a file containing the session with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSession_export'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{guid}/export
      tags:
      - Sessions
      - Export
  /sessions/{session_id}/elevator_floors:
    get:
      description: Retrieve the list of elevator floors that belong to the session
        with the specified session ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The session_id to search for
        in: path
        name: session_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSession_elevator_floors'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{session_id}/elevator_floors
      tags:
      - Sessions
      - Elevator_floors
  /sessions/{session_id}/elevators:
    get:
      description: Retrieve the list of elevators that belong to the session with
        the specified session ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The session_id to search for
        in: path
        name: session_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSession_elevators'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{session_id}/elevators
      tags:
      - Sessions
      - Elevators
  /sessions/{session_id}/maps:
    get:
      description: Retrieve the list of maps that belong to the session with the specified
        session ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The session_id to search for
        in: path
        name: session_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSession_maps'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{session_id}/maps
      tags:
      - Sessions
      - Maps
  /sessions/{session_id}/missions:
    get:
      description: Retrieve the list of missions that belong to the session with the
        specified session ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The session_id to search for
        in: path
        name: session_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSession_missions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{session_id}/missions
      tags:
      - Sessions
      - Missions
  /sessions/{session_id}/position_transition_lists:
    get:
      description: Retrieve the list of position transition lists that belong to the
        session with the specified session ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The session_id to search for
        in: path
        name: session_id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetPosition_transition_list_from_session'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sessions/{session_id}/position_transition_lists
      tags:
      - Sessions
      - Position_transition_lists
  /setting_groups:
    get:
      description: Retrieve a list with the settings groups
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSetting_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /setting_groups
      tags:
      - Setting_groups
  /setting_groups/{id}:
    get:
      description: Retrieve the details about the settings group with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSetting_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /setting_groups/{id}
      tags:
      - Setting_groups
  /setting_groups/{settings_group_id}/settings:
    get:
      description: Retrieve the list of settings from the settings group with the
        specified settings group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The settings_group_id to search for
        format: int32
        in: path
        name: settings_group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSetting_group_settings'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /setting_groups/{settings_group_id}/settings
      tags:
      - Setting_groups
      - Settings
  /setting_groups/{settings_group_id}/settings/advanced:
    get:
      description: Retrieve the list of advanced settings from the settings group
        with the specified settings group ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The settings_group_id to search for
        format: int32
        in: path
        name: settings_group_id
        required: true
        type: integer
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSetting_group_advanced_settings'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /setting_groups/{settings_group_id}/settings/advanced
      tags:
      - Setting_groups
      - Settings
      - Advanced
  /settings:
    get:
      description: Retrieve a list with the settings
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSettings'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /settings
      tags:
      - Settings
  /settings/advanced:
    get:
      description: Retrieve the list with the advanced settings
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSettings_advanced'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /settings/advanced
      tags:
      - Settings
      - Advanced
  /settings/advanced/{id}:
    get:
      description: Retrieve the details of the advanced setting with the specified
        ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSetting_advanced'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /settings/advanced/{id}
      tags:
      - Settings
      - Advanced
    put:
      description: Modify the values of the advanced setting with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        in: path
        name: id
        required: true
        type: string
      - description: The new values of the setting_advanced
        in: body
        name: Setting_advanced
        required: true
        schema:
          $ref: '#/definitions/PutSetting_advanced'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetSetting_advanced'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /settings/advanced/{id}
      tags:
      - Settings
      - Advanced
  /settings/{id}:
    get:
      description: Retrieve the details of the setting with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to search for
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSetting'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /settings/{id}
      tags:
      - Settings
    put:
      description: Modify the values of the setting with the specified ID
      parameters:
      - $ref: '#/parameters/language'
      - description: The id to modify
        in: path
        name: id
        required: true
        type: string
      - description: The new values of the setting
        in: body
        name: Setting
        required: true
        schema:
          $ref: '#/definitions/PutSetting'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetSetting'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /settings/{id}
      tags:
      - Settings
  /software/backups:
    get:
      description: Retrieve the list with all the software backups
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSoftware_backups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/backups
      tags:
      - Software
      - Backups
    post:
      description: Create a new software backup
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSoftware_backups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /software/backups
      tags:
      - Software
      - Backups
  /software/backups/{guid}:
    delete:
      description: Erase the software backup with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /software/backups/{guid}
      tags:
      - Software
      - Backups
    get:
      description: Retrieve the details about the software backup with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSoftware_backup'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/backups/{guid}
      tags:
      - Software
      - Backups
    post:
      description: If it exists a software backup with the specified GUID it will
        restore that backup. Otherwise, it will create a software backup with the
        specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to add the new resource to
        in: path
        name: guid
        required: true
        type: string
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSoftware_backup'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /software/backups/{guid}
      tags:
      - Software
      - Backups
  /software/logs:
    get:
      description: Retrieve the list of software upgrade logs
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSoftware_logs'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/logs
      tags:
      - Software
      - Logs
  /software/logs/{guid}:
    get:
      description: Retrieve the details about the software upgrade log with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSoftware_log'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/logs/{guid}
      tags:
      - Software
      - Logs
  /software/upgrades:
    get:
      description: Retrieve a list of the software upgrade performed
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSoftware_upgrades'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/upgrades
      tags:
      - Software
      - Upgrades
    post:
      description: Upgrade with the provided upgrade file
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSoftware_upgrades'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /software/upgrades
      tags:
      - Software
      - Upgrades
  /software/upgrades/{guid}:
    delete:
      description: Erase the upgrade file with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /software/upgrades/{guid}
      tags:
      - Software
      - Upgrades
    get:
      description: Retrieve the details of the software upgrade with the specified
        GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSoftware_upgrade'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /software/upgrades/{guid}
      tags:
      - Software
      - Upgrades
    post:
      description: Upgrade to the version of the upgrade file with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to add the new resource to
        in: path
        name: guid
        required: true
        type: string
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSoftware_upgrade'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /software/upgrades/{guid}
      tags:
      - Software
      - Upgrades
  /sounds:
    get:
      description: Retrieve the list of sounds
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSounds'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sounds
      tags:
      - Sounds
    post:
      description: Add a new sound
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the sounds
        in: body
        name: Sounds
        required: true
        schema:
          $ref: '#/definitions/PostSounds'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetSounds'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /sounds
      tags:
      - Sounds
  /sounds/{guid}:
    delete:
      description: Erase the sound with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /sounds/{guid}
      tags:
      - Sounds
    get:
      description: Retrieve the details about the sound with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSound'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sounds/{guid}
      tags:
      - Sounds
    put:
      description: Modify the values of the sound with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the sound
        in: body
        name: Sound
        required: true
        schema:
          $ref: '#/definitions/PutSound'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetSound'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /sounds/{guid}
      tags:
      - Sounds
  /sounds/{guid}/stream:
    get:
      description: Download the sound file of the sound with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSound_stream'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sounds/{guid}/stream
      tags:
      - Sounds
      - Stream
  /ssl/cert:
    delete:
      description: Use default self-signed certificate
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /ssl/cert
      tags:
      - Ssl
      - Cert
    post:
      description: Upload new certificate pair
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the cert
        in: body
        name: Cert
        required: true
        schema:
          $ref: '#/definitions/PostCert'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetCert'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /ssl/cert
      tags:
      - Ssl
      - Cert
  /status:
    get:
      description: Retrieve the state of the fleet
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetState'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /status
      tags:
      - Status
    put:
      description: Modify the state of the fleet
      parameters:
      - $ref: '#/parameters/language'
      - description: The new values of the state
        in: body
        name: State
        required: true
        schema:
          $ref: '#/definitions/PutState'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetState'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /status
      tags:
      - Status
  /sw_version_status:
    get:
      description: Get software version status of the robots
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetSw_version_status'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /sw_version_status
      tags:
      - Sw_version_status
  /system/info:
    get:
      description: Retrieve the information about the system. It contains different
        information like serial numbers of hardware components, MAC addresses of network
        cards, etc...
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetSystem_info'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /system/info
      tags:
      - System
      - Info
  /user_groups:
    get:
      description: Retrieve the list of user groups
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetUser_groups'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /user_groups
      tags:
      - User_groups
    post:
      description: Add a new user group
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the user_groups
        in: body
        name: User_groups
        required: true
        schema:
          $ref: '#/definitions/PostUser_groups'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetUser_groups'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /user_groups
      tags:
      - User_groups
  /user_groups/{guid}:
    delete:
      description: Erase the user group with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /user_groups/{guid}
      tags:
      - User_groups
    get:
      description: Retrieve the details about the user group with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetUser_group'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /user_groups/{guid}
      tags:
      - User_groups
    put:
      description: Modify the values of the user group with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the user_group
        in: body
        name: User_group
        required: true
        schema:
          $ref: '#/definitions/PutUser_group'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetUser_group'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /user_groups/{guid}
      tags:
      - User_groups
  /user_groups/{user_group_guid}/permissions:
    get:
      description: Retrieve the list of permissions of the user group with the specified
        group GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The user_group_guid to search for
        in: path
        name: user_group_guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetUser_group_permission'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /user_groups/{user_group_guid}/permissions
      tags:
      - User_groups
      - Permissions
    post:
      description: Add a new permission to the group with the specified group GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The user_group_guid to add the new resource to
        in: path
        name: user_group_guid
        required: true
        type: string
      - description: The details of the user_group_permission
        in: body
        name: User_group_permission
        required: true
        schema:
          $ref: '#/definitions/PostUser_group_permission'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetUser_group_permission'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /user_groups/{user_group_guid}/permissions
      tags:
      - User_groups
      - Permissions
  /users:
    get:
      description: Retrieve the list of users
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetUsers'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /users
      tags:
      - Users
    post:
      description: Add a new user
      parameters:
      - $ref: '#/parameters/language'
      - description: The details of the users
        in: body
        name: Users
        required: true
        schema:
          $ref: '#/definitions/PostUsers'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetUsers'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /users
      tags:
      - Users
  /users/auth:
    delete:
      description: Logout user
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /users/auth
      tags:
      - Users
      - Auth
    post:
      description: Login with user credentials
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '201':
          description: The element has been created successfully
          schema:
            $ref: '#/definitions/GetUsers_auth'
        '400':
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate entry
          schema:
            $ref: '#/definitions/Error'
      summary: POST /users/auth
      tags:
      - Users
      - Auth
  /users/me:
    get:
      description: Retrieve the details about the user currently authorized in the
        API
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetMe'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /users/me
      tags:
      - Users
      - Me
    put:
      description: Modify the values of the user currently authorized in the API
      parameters:
      - $ref: '#/parameters/language'
      - description: The new values of the me
        in: body
        name: Me
        required: true
        schema:
          $ref: '#/definitions/PutMe'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetMe'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /users/me
      tags:
      - Users
      - Me
  /users/me/permissions:
    get:
      description: Retrieve the permission of the user currently authorized in the
        API
      parameters:
      - $ref: '#/parameters/language'
      responses:
        '200':
          description: Successfully retrieved the list of elements
          schema:
            items:
              $ref: '#/definitions/GetUser_me_permissions'
            type: array
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /users/me/permissions
      tags:
      - Users
      - Me
      - Permissions
  /users/{guid}:
    delete:
      description: Erase the user with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to delete
        in: path
        name: guid
        required: true
        type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: DELETE /users/{guid}
      tags:
      - Users
    get:
      description: Retrieve the details about the user with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to search for
        in: path
        name: guid
        required: true
        type: string
      responses:
        '200':
          description: Successfully retrieve the specified element
          schema:
            $ref: '#/definitions/GetUser'
        '400':
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: GET /users/{guid}
      tags:
      - Users
    put:
      description: Modify the values of the user with the specified GUID
      parameters:
      - $ref: '#/parameters/language'
      - description: The guid to modify
        in: path
        name: guid
        required: true
        type: string
      - description: The new values of the user
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/PutUser'
      responses:
        '200':
          description: The element has been modified successfully
          schema:
            $ref: '#/definitions/GetUser'
        '400':
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error'
      summary: PUT /users/{guid}
      tags:
      - Users
produces:
- application/json
schemes:
- http
security:
- Basic: []
securityDefinitions:
  Basic:
    description: "To authenticate in the API a basic autentication has to be included\
      \ in the header.\n        It consists in a string that is base64 encoded and\
      \ it is formed by the username followed by a colon and the password sha-256\
      \ encoded.\n        Ex: BASE64( <username>:SHA-256( <password> ) )\n       \
      \ \nAn example header would look like this:\n\n        Content-Type:application/json\n\
      \n        authorization:Basic ZGlzdHJpYnV0b3I6NjJmMmYwZjFlZmYxMGQzMTUyYzk1ZjZmMDU5NjU3NmU0ODJiYjhlNDQ4MDY0MzNmNGNmOTI5NzkyODM0YjAxNA==\n\
      \n        \nSHA-256 encoder http://www.xorbin.com/tools/sha256-hash-calculator\n\
      \        \nBase64 encoded https://www.base64encode.org/\n    "
    type: basic
swagger: '2.0'
